{"version":3,"sources":["file:///C:/Users/User/Desktop/simatap_frontend/assets/scripts/SocketManager.ts"],"names":["_decorator","Component","Label","Color","ProgressBar","ccclass","property","SocketManager","socket","userId","maxEnergy","currentEnergy","start","coinsLabel","energyProgressBar","energyValueLabel","messagesLabel","autoConnect","showUserInfo","onDestroy","disconnect","io","transports","secure","rejectUnauthorized","on","emit","showMessage","data","updateEnergy","energy_left","roundedCoins","Math","round","coins","string","toLocaleString","message","error","onTap","connected","type","node","color","show","active","max","min","progress","getCurrentEnergy"],"mappings":"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","sourcesContent":["// assets/scripts/SocketManager.ts\r\nimport { _decorator, Component, Label, Color, ProgressBar } from 'cc';\r\ndeclare const io: any; // Глобальная переменная для socket.io\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SocketManager')\r\nexport class SocketManager extends Component {\r\n    @property(Label)\r\n    coinsLabel: Label = null;\r\n\r\n    @property(ProgressBar)\r\n    energyProgressBar: ProgressBar = null; // Свойство для ProgressBar\r\n\r\n    @property(Label)\r\n    energyValueLabel: Label = null; // Свойство для текстовой метки под прогресс-баром\r\n\r\n    @property(Label)\r\n    messagesLabel: Label = null;\r\n\r\n    private socket: any = null;\r\n    private userId: number = 777270195; // Фиксированный userId\r\n    private maxEnergy: number = 2000; // Максимальное значение энергии\r\n    private currentEnergy: number = 0; // Текущее значение энергии\r\n\r\n    start() {\r\n        if (!this.coinsLabel || !this.energyProgressBar || !this.energyValueLabel || !this.messagesLabel) {\r\n            return;\r\n        }\r\n\r\n        this.autoConnect();\r\n        this.showUserInfo(false);\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this.socket) {\r\n            this.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Автоматически подключается к серверу Socket.IO с фиксированным userId\r\n     */\r\n    autoConnect() {\r\n        try {\r\n            this.socket = io('https://dev.simatap.ru', {\r\n                transports: ['websocket'],\r\n                secure: true,\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            this.socket.on('connect', () => {\r\n                this.socket.emit('register', { userId: this.userId });\r\n                this.showUserInfo(true);\r\n            });\r\n\r\n            this.socket.on('disconnect', () => {\r\n                this.showMessage('Отключено от сервера.', 'danger');\r\n                this.showUserInfo(false);\r\n            });\r\n\r\n            this.socket.on('energyUpdated', (data: any) => {\r\n                this.updateEnergy(data.energy_left);\r\n            });\r\n\r\n            this.socket.on('coinsUpdated', (data: any) => {\r\n                const roundedCoins = Math.round(data.coins);\r\n                this.coinsLabel.string = roundedCoins.toLocaleString(); // Добавляем разделители тысяч\r\n            });\r\n\r\n            this.socket.on('tapError', (data: any) => {\r\n                this.showMessage(data.message, 'warning');\r\n            });\r\n\r\n            this.socket.on('registrationError', (data: any) => {\r\n                this.showMessage(data.message, 'danger');\r\n                this.showUserInfo(false);\r\n            });\r\n\r\n            this.socket.on('connect_error', (error: any) => {\r\n                this.showMessage('Ошибка подключения к серверу.', 'danger');\r\n            });\r\n        } catch (error) {\r\n            this.showMessage('Ошибка подключения к серверу.', 'danger');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обработчик события \"tap\"\r\n     */\r\n    onTap() {\r\n        if (!this.userId) {\r\n            this.showMessage('Пользователь не подключен.', 'danger');\r\n            return;\r\n        }\r\n        if (this.socket && this.socket.connected) {\r\n            this.socket.emit('tap', { userId: this.userId });\r\n            this.showMessage('Тап отправлен!', 'info');\r\n        } else {\r\n            this.showMessage('Соединение с сервером отсутствует.', 'danger');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Отображает сообщение пользователю\r\n     * @param message Текст сообщения\r\n     * @param type Тип сообщения ('success', 'danger', 'warning', 'info')\r\n     */\r\n    showMessage(message: string, type: string = 'info') {\r\n        if (this.messagesLabel) {\r\n            this.messagesLabel.string = message;\r\n            switch (type) {\r\n                case 'success':\r\n                    this.messagesLabel.node.color = new Color(0, 255, 0);\r\n                    break;\r\n                case 'danger':\r\n                    this.messagesLabel.node.color = new Color(255, 0, 0);\r\n                    break;\r\n                case 'warning':\r\n                    this.messagesLabel.node.color = new Color(255, 165, 0);\r\n                    break;\r\n                default:\r\n                    this.messagesLabel.node.color = new Color(255, 255, 255);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Показывает или скрывает UserInfo\r\n     * @param show Показывать или скрывать\r\n     */\r\n    showUserInfo(show: boolean) {\r\n        if (this.coinsLabel && this.energyProgressBar && this.energyValueLabel) {\r\n            this.coinsLabel.node.active = show;\r\n            this.energyProgressBar.node.active = show;\r\n            this.energyValueLabel.node.active = show;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обновляет прогресс-бар энергии и текстовую метку.\r\n     * @param currentEnergy Текущее значение энергии.\r\n     */\r\n    updateEnergy(currentEnergy: number) {\r\n        currentEnergy = Math.max(0, Math.min(this.maxEnergy, currentEnergy));\r\n        this.currentEnergy = currentEnergy;\r\n\r\n        const progress = currentEnergy / this.maxEnergy;\r\n        this.energyProgressBar.progress = progress;\r\n\r\n        this.energyValueLabel.string = `${currentEnergy}/${this.maxEnergy}`;\r\n    }\r\n\r\n    /**\r\n     * Возвращает текущее значение энергии\r\n     */\r\n    getCurrentEnergy(): number {\r\n        return this.currentEnergy;\r\n    }\r\n}\r\n"]}