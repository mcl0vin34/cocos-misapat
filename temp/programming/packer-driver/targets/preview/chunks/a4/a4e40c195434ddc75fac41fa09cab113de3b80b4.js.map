{"version":3,"sources":["file:///C:/Users/User/Desktop/simatap_frontend/assets/scripts/FriendsPage-001.ts"],"names":["_decorator","Component","ScrollView","Prefab","instantiate","Label","ccclass","property","FriendsPage","userId","start","fetchFriends","response","fetch","apiBaseUrl","ok","status","totalFriendsLabel","string","Error","friends","json","console","log","length","populateFriendsList","error","content","scrollView","removeAllChildren","forEach","friend","index","friendItem","friendItemPrefab","parent","labels","getComponentsInChildren","usernameLabel","numberLabel","coinsLabel","label","nodeName","node","name","username","formatCoins","coins","warn","map","millions","Math","round","toLocaleString"],"mappings":"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","sourcesContent":["// assets/scripts/FriendsPage.ts\r\n\r\nimport { _decorator, Component, ScrollView, Prefab, instantiate, Label, Vec3, Color } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// Интерфейс для Друга\r\ninterface Friend {\r\n    username: string;\r\n    coins: number;\r\n}\r\n\r\n@ccclass('FriendsPage')\r\nexport class FriendsPage extends Component {\r\n    @property(ScrollView)\r\n    scrollView: ScrollView = null;\r\n\r\n    @property(Prefab)\r\n    friendItemPrefab: Prefab = null;\r\n\r\n    @property(Label)\r\n    totalFriendsLabel: Label = null;\r\n\r\n    @property\r\n    apiBaseUrl: string = 'https://dev.simatap.ru/api/referrals';\r\n\r\n    private userId: number = 777270195; // Замените на актуальный userId или получите его из других источников\r\n\r\n    start() {\r\n        this.fetchFriends();\r\n    }\r\n\r\n    async fetchFriends() {\r\n        try {\r\n            const response = await fetch(`${this.apiBaseUrl}/${this.userId}`);\r\n            if (!response.ok) {\r\n                if (response.status === 404) {\r\n                    this.totalFriendsLabel.string = `У тебя пока нет друзей`;\r\n                    return;\r\n                }\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const friends: Friend[] = await response.json();\r\n            console.log('Fetched friends:', friends);\r\n            this.totalFriendsLabel.string = `У тебя ${friends.length} друзей`;\r\n            this.populateFriendsList(friends);\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке списка друзей:', error);\r\n            this.totalFriendsLabel.string = 'Не удалось загрузить список друзей.';\r\n        }\r\n    }\r\n\r\n    populateFriendsList(friends: Friend[]) {\r\n        const content = this.scrollView.content;\r\n        console.log('Populating friends list with', friends.length, 'friends.');\r\n\r\n        // Очистить предыдущие элементы\r\n        content.removeAllChildren();\r\n\r\n        friends.forEach((friend, index) => {\r\n            console.log(`Adding friend ${index + 1}:`, friend);\r\n            const friendItem = instantiate(this.friendItemPrefab);\r\n            friendItem.parent = content;\r\n\r\n            // Получить все Label компоненты в friendItem\r\n            const labels = friendItem.getComponentsInChildren(Label);\r\n            console.log(`Found ${labels.length} Label components in FriendItem.`);\r\n\r\n            let usernameLabel: Label = null;\r\n            let numberLabel: Label = null;\r\n            let coinsLabel: Label = null;\r\n\r\n            labels.forEach(label => {\r\n                const nodeName = label.node.name;\r\n                if (nodeName === 'UsernameLabel') {\r\n                    usernameLabel = label;\r\n                } else if (nodeName === 'NumberLabel') {\r\n                    numberLabel = label;\r\n                } else if (nodeName === 'CoinsLabel') {\r\n                    coinsLabel = label;\r\n                }\r\n            });\r\n\r\n            if (usernameLabel && numberLabel && coinsLabel) {\r\n                usernameLabel.string = friend.username;\r\n                numberLabel.string = `${index + 1}.`;\r\n                coinsLabel.string = this.formatCoins(friend.coins);\r\n                console.log(`Set Username: ${friend.username}, Number: ${index + 1}, Coins: ${friend.coins}`);\r\n            } else {\r\n                console.warn('Не удалось найти один из Label компонентов в FriendItem');\r\n                console.log('Найденные Label узлы:', labels.map(label => label.node.name));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Форматирует количество монет.\r\n     * Если монет >= 1,000,000, отображает в миллионах с буквой \"M\" без пробела.\r\n     * Иначе, отображает количество монет с разделителями тысяч и округляет до целого числа.\r\n     * @param coins Количество монет\r\n     * @returns Отформатированная строка\r\n     */\r\n    formatCoins(coins: number): string {\r\n        if (coins >= 1_000_000) {\r\n            const millions = Math.round(coins / 1_000_000);\r\n            return `${millions}M`;\r\n        } else {\r\n            return Math.round(coins).toLocaleString();\r\n        }\r\n    }\r\n}\r\n"]}