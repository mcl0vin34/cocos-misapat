{"version":3,"sources":["file:///C:/Users/User/Desktop/simatap_frontend/assets/scripts/TabBarController.ts"],"names":["_decorator","Component","Node","Label","Color","tween","UIOpacity","Vec3","ccclass","property","TabBarController","currentTab","onLoad","checkProperties","showPage","iconHome","on","EventType","TOUCH_END","iconFriends","iconStore","iconLeaders","iconTasks","properties","name","value","mainPage","friendsPage","storePage","leadersPage","tasksPage","textHome","textFriends","textStore","textLeaders","textTasks","buttonHome","buttonFriends","buttonLeaders","buttonTasks","activeButton","forEach","prop","console","warn","pageName","animate","hidePage","showNewPage","updateTabUI","pageNode","getPageNode","uiOpacity","getComponent","addComponent","to","scale","start","opacity","call","active","setScale","log","error","activePage","color","GRAY","WHITE"],"mappings":"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","sourcesContent":["// TabBarController.ts\r\n\r\nimport { _decorator, Component, Node, Label, Color, tween, UIOpacity, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TabBarController')\r\nexport class TabBarController extends Component {\r\n    // Ссылки на страницы\r\n    @property(Node)\r\n    mainPage: Node = null;\r\n\r\n    @property(Node)\r\n    friendsPage: Node = null;\r\n\r\n    @property(Node)\r\n    storePage: Node = null;\r\n\r\n    @property(Node)\r\n    leadersPage: Node = null;\r\n\r\n    @property(Node)\r\n    tasksPage: Node = null;\r\n\r\n    // Ссылки на иконки вкладок\r\n    @property(Node)\r\n    iconHome: Node = null;\r\n\r\n    @property(Node)\r\n    iconFriends: Node = null;\r\n\r\n    @property(Node)\r\n    iconStore: Node = null;\r\n\r\n    @property(Node)\r\n    iconLeaders: Node = null;\r\n\r\n    @property(Node)\r\n    iconTasks: Node = null;\r\n\r\n    // Ссылки на текстовые метки вкладок\r\n    @property(Label)\r\n    textHome: Label = null;\r\n\r\n    @property(Label)\r\n    textFriends: Label = null;\r\n\r\n    @property(Label)\r\n    textStore: Label = null;\r\n\r\n    @property(Label)\r\n    textLeaders: Label = null;\r\n\r\n    @property(Label)\r\n    textTasks: Label = null;\r\n\r\n    // Ссылки на индикаторы вкладок\r\n    @property(Node)\r\n    buttonHome: Node = null;\r\n\r\n    @property(Node)\r\n    buttonFriends: Node = null;\r\n\r\n    @property(Node)\r\n    buttonLeaders: Node = null;\r\n\r\n    @property(Node)\r\n    buttonTasks: Node = null;\r\n\r\n    // Визуальный индикатор активной вкладки \"Магазин\"\r\n    @property(Node)\r\n    activeButton: Node = null;\r\n\r\n    // Текущая активная вкладка\r\n    private currentTab: string = 'home';\r\n\r\n    onLoad() {\r\n        // Проверка всех свойств на null и логирование\r\n        this.checkProperties();\r\n\r\n        // Инициализация: показать главную страницу без анимации\r\n        this.showPage(this.currentTab, false);\r\n\r\n        // Присоединение обработчиков событий к иконкам вкладок\r\n        this.iconHome.on(Node.EventType.TOUCH_END, () => {\r\n            this.showPage('home', true);\r\n        });\r\n\r\n        this.iconFriends.on(Node.EventType.TOUCH_END, () => {\r\n            this.showPage('friends', true);\r\n        });\r\n\r\n        this.iconStore.on(Node.EventType.TOUCH_END, () => {\r\n            this.showPage('store', true);\r\n        });\r\n\r\n        this.iconLeaders.on(Node.EventType.TOUCH_END, () => {\r\n            this.showPage('leaders', true);\r\n        });\r\n\r\n        this.iconTasks.on(Node.EventType.TOUCH_END, () => {\r\n            this.showPage('tasks', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Проверяет все свойства на null и выводит предупреждения в консоль\r\n     */\r\n    private checkProperties() {\r\n        const properties = [\r\n            { name: 'mainPage', value: this.mainPage },\r\n            { name: 'friendsPage', value: this.friendsPage },\r\n            { name: 'storePage', value: this.storePage },\r\n            { name: 'leadersPage', value: this.leadersPage },\r\n            { name: 'tasksPage', value: this.tasksPage },\r\n            { name: 'iconHome', value: this.iconHome },\r\n            { name: 'iconFriends', value: this.iconFriends },\r\n            { name: 'iconStore', value: this.iconStore },\r\n            { name: 'iconLeaders', value: this.iconLeaders },\r\n            { name: 'iconTasks', value: this.iconTasks },\r\n            { name: 'textHome', value: this.textHome },\r\n            { name: 'textFriends', value: this.textFriends },\r\n            { name: 'textStore', value: this.textStore },\r\n            { name: 'textLeaders', value: this.textLeaders },\r\n            { name: 'textTasks', value: this.textTasks },\r\n            { name: 'buttonHome', value: this.buttonHome },\r\n            { name: 'buttonFriends', value: this.buttonFriends },\r\n            { name: 'buttonLeaders', value: this.buttonLeaders },\r\n            { name: 'buttonTasks', value: this.buttonTasks },\r\n            { name: 'activeButton', value: this.activeButton },\r\n        ];\r\n\r\n        properties.forEach(prop => {\r\n            if (!prop.value) {\r\n                console.warn(`Property \"${prop.name}\" is not assigned in the inspector.`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Переключает видимую страницу и обновляет состояние вкладок\r\n     * @param pageName - имя страницы ('home', 'friends', 'store', 'leaders', 'tasks')\r\n     * @param animate - показывать ли анимацию при переключении\r\n     */\r\n    showPage(pageName: string, animate: boolean = true) {\r\n        if (pageName === this.currentTab) return;\r\n\r\n        // Скрыть текущую страницу с анимацией\r\n        this.hidePage(this.currentTab, animate);\r\n\r\n        // Показать новую страницу с анимацией\r\n        this.showNewPage(pageName, animate);\r\n\r\n        // Обновить состояние вкладок\r\n        this.updateTabUI(pageName);\r\n\r\n        // Обновить текущую вкладку\r\n        this.currentTab = pageName;\r\n    }\r\n\r\n    /**\r\n     * Скрывает указанную страницу\r\n     * @param pageName - имя страницы для скрытия\r\n     * @param animate - использовать ли анимацию\r\n     */\r\n    hidePage(pageName: string, animate: boolean) {\r\n        const pageNode = this.getPageNode(pageName);\r\n        if (pageNode) {\r\n            let uiOpacity = pageNode.getComponent(UIOpacity);\r\n            if (!uiOpacity) {\r\n                console.warn(`UIOpacity component not found on \"${pageName}\" page. Adding one.`);\r\n                uiOpacity = pageNode.addComponent(UIOpacity);\r\n            }\r\n\r\n            if (animate) {\r\n                // Анимация уменьшения масштаба\r\n                tween(pageNode)\r\n                    .to(0.3, { scale: new Vec3(0.95, 0.95, 1) })\r\n                    .start();\r\n\r\n                // Анимация уменьшения прозрачности\r\n                tween(uiOpacity)\r\n                    .to(0.3, { opacity: 0 })\r\n                    .call(() => {\r\n                        pageNode.active = false;\r\n                        // Возвращаем исходный масштаб и прозрачность для будущих показов\r\n                        pageNode.setScale(1, 1, 1);\r\n                        uiOpacity.opacity = 255;\r\n                        console.log(`Page \"${pageName}\" скрыта.`);\r\n                    })\r\n                    .start();\r\n            } else {\r\n                pageNode.active = false;\r\n                uiOpacity.opacity = 255;\r\n                console.log(`Page \"${pageName}\" скрыта без анимации.`);\r\n            }\r\n        } else {\r\n            console.error(`Page node for \"${pageName}\" not found.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Показывает указанную страницу\r\n     * @param pageName - имя страницы для показа\r\n     * @param animate - использовать ли анимацию\r\n     */\r\n    showNewPage(pageName: string, animate: boolean) {\r\n        const pageNode = this.getPageNode(pageName);\r\n        if (pageNode) {\r\n            pageNode.active = true;\r\n            let uiOpacity = pageNode.getComponent(UIOpacity);\r\n            if (!uiOpacity) {\r\n                console.warn(`UIOpacity component not found on \"${pageName}\" page. Adding one.`);\r\n                uiOpacity = pageNode.addComponent(UIOpacity);\r\n            }\r\n\r\n            if (animate) {\r\n                // Устанавливаем начальные параметры для анимации\r\n                uiOpacity.opacity = 0;\r\n                pageNode.setScale(0.95, 0.95, 1);\r\n\r\n                // Анимация увеличения прозрачности\r\n                tween(uiOpacity)\r\n                    .to(0.3, { opacity: 255 })\r\n                    .start();\r\n\r\n                // Анимация увеличения масштаба\r\n                tween(pageNode)\r\n                    .to(0.3, { scale: new Vec3(1.05, 1.05, 1) })\r\n                    .to(0.3, { scale: new Vec3(1, 1, 1) })\r\n                    .call(() => {\r\n                        console.log(`Page \"${pageName}\" показана.`);\r\n                    })\r\n                    .start();\r\n            } else {\r\n                uiOpacity.opacity = 255;\r\n                pageNode.setScale(1, 1, 1);\r\n                console.log(`Page \"${pageName}\" показана без анимации.`);\r\n            }\r\n        } else {\r\n            console.error(`Page node for \"${pageName}\" not found.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Возвращает ноду страницы по имени\r\n     * @param pageName - имя страницы\r\n     */\r\n    getPageNode(pageName: string): Node | null {\r\n        switch (pageName) {\r\n            case 'home':\r\n                return this.mainPage;\r\n            case 'friends':\r\n                return this.friendsPage;\r\n            case 'store':\r\n                return this.storePage;\r\n            case 'leaders':\r\n                return this.leadersPage;\r\n            case 'tasks':\r\n                return this.tasksPage;\r\n            default:\r\n                console.warn(`Unknown page: ${pageName}`);\r\n                return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обновляет UI вкладок (цвет текста и индикаторы)\r\n     * @param activePage - имя активной страницы\r\n     */\r\n    updateTabUI(activePage: string) {\r\n        // Сбросить все цвета текстов на серый\r\n        this.textHome.color = Color.GRAY;\r\n        this.textFriends.color = Color.GRAY;\r\n        this.textStore.color = Color.GRAY;\r\n        this.textLeaders.color = Color.GRAY;\r\n        this.textTasks.color = Color.GRAY;\r\n\r\n        // Скрыть все индикаторы\r\n        this.activeButton.active = false;\r\n        this.buttonHome.active = false;\r\n        this.buttonFriends.active = false;\r\n        this.buttonLeaders.active = false;\r\n        this.buttonTasks.active = false;\r\n\r\n        switch (activePage) {\r\n            case 'home':\r\n                this.textHome.color = Color.WHITE;\r\n                this.buttonHome.active = true;\r\n                break;\r\n            case 'friends':\r\n                this.textFriends.color = Color.WHITE;\r\n                this.buttonFriends.active = true;\r\n                break;\r\n            case 'store':\r\n                this.textStore.color = Color.WHITE;\r\n                this.activeButton.active = true;\r\n                break;\r\n            case 'leaders':\r\n                this.textLeaders.color = Color.WHITE;\r\n                this.buttonLeaders.active = true;\r\n                break;\r\n            case 'tasks':\r\n                this.textTasks.color = Color.WHITE;\r\n                this.buttonTasks.active = true;\r\n                break;\r\n        }\r\n    }\r\n}\r\n"]}