{"version":3,"sources":["file:///C:/GitHub/cocos-misapat/assets/scripts/SocketManager.ts"],"names":["_decorator","Component","Label","Color","ProgressBar","IncomeManager","PassiveIncomeModal","ccclass","property","SocketManager","socket","userId","maxEnergy","currentEnergy","currentBoosts","maxBoosts","currentCoins","instance","_instance","console","error","onLoad","warn","node","destroy","start","coinsLabel","energyProgressBar","energyValueLabel","messagesLabel","boostsLabel","incomeManager","incomeManagerNode","scene","getChildByName","getComponent","autoConnect","showUserInfo","checkPassiveIncome","onDestroy","disconnect","io","transports","secure","rejectUnauthorized","on","emit","fetchInitialData","showMessage","data","log","energy_left","undefined","updateEnergy","Math","round","boosts_left","updateBoosts","coins","updateCoins","message","newEnergyValue","response","fetch","ok","Error","status","json","string","toLocaleString","income","fetchPassiveIncome","passiveIncomeModal","show","errorText","text","passive_income_earned","boostsLeft","max","min","progress","active","type","color","getCurrentEnergy","getCurrentBoosts","activateBoost","connected","onTap","getUserId","setUserId","id","initializeUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,W,OAAAA,W;;AACrCC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,kB,iBAAAA,kB;;;;;qFAJT;;;+FAGiD;;;AACU;AACpC;OAEjB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;+BAGjBS,a,WADZF,OAAO,CAAC,eAAD,C,UAeLC,QAAQ,CAACN,KAAD,C,UAGRM,QAAQ,CAACJ,WAAD,C,UAGRI,QAAQ,CAACN,KAAD,C,UAGRM,QAAQ,CAACN,KAAD,C,UAGRM,QAAQ,CAACN,KAAD,C,UAGRM,QAAQ;AAAA;AAAA,yC,UAGRA,QAAQ;AAAA;AAAA,mD,sCAjCX,MACaC,aADb,SACmCR,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AA2BhB;AA3BgB;;AA8BN;AA9BM;;AAiCI;AAjCJ,eAmCnCS,MAnCmC,GAmCrB,IAnCqB;AAAA,eAoCnCC,MApCmC,GAoClB,SApCkB;AAoCP;AApCO,eAqCnCC,SArCmC,GAqCf,IArCe;AAqCT;AArCS,eAsCnCC,aAtCmC,GAsCX,CAtCW;AAsCR;AAtCQ,eAuCnCC,aAvCmC,GAuCX,CAvCW;AAuCR;AAvCQ,eAwCnCC,SAxCmC,GAwCf,CAxCe;AAwCZ;AAxCY,eAyCnCC,YAzCmC,GAyCZ,CAzCY;AAAA;;AAI3C;AAC0B,mBAARC,QAAQ,GAAkB;AAC1C,cAAI,CAACR,aAAa,CAACS,SAAnB,EAA8B;AAC5BC,YAAAA,OAAO,CAACC,KAAR,CACE,+EADF;AAGD;;AACD,iBAAOX,aAAa,CAACS,SAArB;AACD;;AA6BiC;AAElCG,QAAAA,MAAM,GAAG;AACP,cAAIZ,aAAa,CAACS,SAAd,IAA2BT,aAAa,CAACS,SAAd,KAA4B,IAA3D,EAAiE;AAC/DC,YAAAA,OAAO,CAACG,IAAR,CAAa,mDAAb;AACA,iBAAKC,IAAL,CAAUC,OAAV;AACA;AACD;;AACDf,UAAAA,aAAa,CAACS,SAAd,GAA0B,IAA1B;AACD;;AAEDO,QAAAA,KAAK,GAAG;AACN,cACE,CAAC,KAAKC,UAAN,IACA,CAAC,KAAKC,iBADN,IAEA,CAAC,KAAKC,gBAFN,IAGA,CAAC,KAAKC,aAHN,IAIA,CAAC,KAAKC,WALR,EAME;AACAX,YAAAA,OAAO,CAACC,KAAR,CAAc,0DAAd;AACA;AACD,WAVK,CAYN;;;AACA,cAAI,CAAC,KAAKW,aAAV,EAAyB;AACvB,gBAAMC,iBAAiB,GACrB,KAAKT,IAAL,CAAUU,KAAV,CAAgBC,cAAhB,CAA+B,mBAA/B,CADF,CADuB,CAEgC;;AACvD,gBAAIF,iBAAJ,EAAuB;AACrB,mBAAKD,aAAL,GAAqBC,iBAAiB,CAACG,YAAlB;AAAA;AAAA,iDAArB;AACD,aAFD,MAEO;AACLhB,cAAAA,OAAO,CAACG,IAAR,CAAa,kCAAb;AACD;AACF;;AAED,eAAKc,WAAL;AACA,eAAKC,YAAL,CAAkB,KAAlB,EAxBM,CA0BN;;AACA,eAAKC,kBAAL;AACD;;AAEDC,QAAAA,SAAS,GAAG;AACV,cAAI,KAAK7B,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAY8B,UAAZ;AACD,WAHS,CAIV;;;AACA,cAAI/B,aAAa,CAACS,SAAd,KAA4B,IAAhC,EAAsC;AACpCT,YAAAA,aAAa,CAACS,SAAd,GAA0B,IAA1B;AACD;AACF;AAED;AACF;AACA;;;AACEkB,QAAAA,WAAW,GAAG;AACZ,cAAI;AACF,iBAAK1B,MAAL,GAAc+B,EAAE,CAAC,wBAAD,EAA2B;AACzCC,cAAAA,UAAU,EAAE,CAAC,WAAD,CAD6B;AAEzCC,cAAAA,MAAM,EAAE,IAFiC;AAGzCC,cAAAA,kBAAkB,EAAE;AAHqB,aAA3B,CAAhB;AAMA,iBAAKlC,MAAL,CAAYmC,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9B,mBAAKnC,MAAL,CAAYoC,IAAZ,CAAiB,UAAjB,EAA6B;AAAEnC,gBAAAA,MAAM,EAAE,KAAKA;AAAf,eAA7B;AACA,mBAAK0B,YAAL,CAAkB,IAAlB,EAF8B,CAI9B;;AACA,mBAAKU,gBAAL;AACD,aAND;AAQA,iBAAKrC,MAAL,CAAYmC,EAAZ,CAAe,YAAf,EAA6B,MAAM;AACjC,mBAAKG,WAAL,CAAiB,uBAAjB,EAA0C,QAA1C;AACA,mBAAKX,YAAL,CAAkB,KAAlB;AACD,aAHD;AAKA,iBAAK3B,MAAL,CAAYmC,EAAZ,CAAe,eAAf,EAAiCI,IAAD,IAAe;AAC7C9B,cAAAA,OAAO,CAAC+B,GAAR,CAAY,+BAAZ,EAA6CD,IAA7C;;AACA,kBAAIA,IAAI,CAACE,WAAL,KAAqBC,SAAzB,EAAoC;AAClC,qBAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACE,WAAhB,CAAlB;AACD,eAFD,MAEO;AACLhC,gBAAAA,OAAO,CAACG,IAAR,CACE,6DADF;AAGD;AACF,aATD,EApBE,CA+BF;;AACA,iBAAKZ,MAAL,CAAYmC,EAAZ,CAAe,eAAf,EAAiCI,IAAD,IAAe;AAC7C9B,cAAAA,OAAO,CAAC+B,GAAR,CAAY,+BAAZ,EAA6CD,IAA7C;;AACA,kBAAIA,IAAI,CAACO,WAAL,KAAqBJ,SAAzB,EAAoC;AAClC,qBAAKK,YAAL,CAAkBR,IAAI,CAACO,WAAvB;AACD,eAFD,MAEO;AACLrC,gBAAAA,OAAO,CAACG,IAAR,CACE,6DADF;AAGD;AACF,aATD,EAhCE,CA2CF;;AACA,iBAAKZ,MAAL,CAAYmC,EAAZ,CAAe,cAAf,EAAgCI,IAAD,IAAe;AAC5C9B,cAAAA,OAAO,CAAC+B,GAAR,CAAY,8BAAZ,EAA4CD,IAA5C;;AACA,kBAAIA,IAAI,CAACS,KAAL,KAAeN,SAAnB,EAA8B;AAC5B,qBAAKO,WAAL,CAAiBL,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACS,KAAhB,CAAjB;AACD,eAFD,MAEO;AACLvC,gBAAAA,OAAO,CAACG,IAAR,CAAa,sDAAb;AACD;AACF,aAPD,EA5CE,CAqDF;;AAEA,iBAAKZ,MAAL,CAAYmC,EAAZ,CAAe,UAAf,EAA4BI,IAAD,IAAe;AACxC,mBAAKD,WAAL,CAAiBC,IAAI,CAACW,OAAtB,EAA+B,SAA/B;AACD,aAFD;AAIA,iBAAKlD,MAAL,CAAYmC,EAAZ,CAAe,mBAAf,EAAqCI,IAAD,IAAe;AACjD,mBAAKD,WAAL,CAAiBC,IAAI,CAACW,OAAtB,EAA+B,QAA/B;AACA,mBAAKvB,YAAL,CAAkB,KAAlB;AACD,aAHD;AAKA,iBAAK3B,MAAL,CAAYmC,EAAZ,CAAe,eAAf,EAAiCzB,KAAD,IAAgB;AAC9C,mBAAK4B,WAAL,CAAiB,+BAAjB,EAAkD,QAAlD;AACD,aAFD,EAhEE,CAoEF;;AACA,iBAAKtC,MAAL,CAAYmC,EAAZ,CAAe,gBAAf,EAAkCI,IAAD,IAAe;AAC9C9B,cAAAA,OAAO,CAAC+B,GAAR,CAAY,4BAAZ,EAA0CD,IAA1C,EAD8C,CAE9C;;AACA,kBAAIA,IAAI,CAACY,cAAL,KAAwBT,SAA5B,EAAuC;AACrC,qBAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACY,cAAhB,CAAlB;AACD,eAL6C,CAM9C;;AACD,aAPD,EArEE,CA8EF;;AACA,iBAAKnD,MAAL,CAAYmC,EAAZ,CAAe,YAAf,EAA8BI,IAAD,IAAe;AAC1C9B,cAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyC6B,IAAI,CAACW,OAA9C,EAD0C,CAE1C;AACD,aAHD;AAID,WAnFD,CAmFE,OAAOxC,KAAP,EAAc;AACd,iBAAK4B,WAAL,CAAiB,+BAAjB,EAAkD,QAAlD;AACA7B,YAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF;AAED;AACF;AACA;;;AACQ2B,QAAAA,gBAAgB,GAAG;AAAA;;AAAA;AACvB,gBAAI;AACF,kBAAMe,QAAQ,SAASC,KAAK,uCACU,KAAI,CAACpD,MADf,CAA5B;;AAGA,kBAAI,CAACmD,QAAQ,CAACE,EAAd,EAAkB;AAChB,sBAAM,IAAIC,KAAJ,0BAAiCH,QAAQ,CAACI,MAA1C,CAAN;AACD;;AACD,kBAAMjB,IAAI,SAASa,QAAQ,CAACK,IAAT,EAAnB;AAEAhD,cAAAA,OAAO,CAAC+B,GAAR,CAAY,eAAZ,EAA6BD,IAA7B,EATE,CAWF;;AACA,kBAAIA,IAAI,CAACE,WAAL,KAAqBC,SAAzB,EAAoC;AAClC,gBAAA,KAAI,CAACC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACE,WAAhB,CAAlB;;AACAhC,gBAAAA,OAAO,CAAC+B,GAAR,8BAAuCI,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACE,WAAhB,CAAvC;AACD,eAHD,MAGO;AACLhC,gBAAAA,OAAO,CAACG,IAAR,CAAa,wCAAb;AACD,eAjBC,CAmBF;;;AACA,kBAAI2B,IAAI,CAACO,WAAL,KAAqBJ,SAAzB,EAAoC;AAClC,gBAAA,KAAI,CAACK,YAAL,CAAkBR,IAAI,CAACO,WAAvB;;AACArC,gBAAAA,OAAO,CAAC+B,GAAR,8BAAuCD,IAAI,CAACO,WAA5C;AACD,eAHD,MAGO;AACLrC,gBAAAA,OAAO,CAACG,IAAR,CAAa,wCAAb;AACD,eAzBC,CA2BF;;;AACA,kBAAI2B,IAAI,CAACS,KAAL,KAAeN,SAAnB,EAA8B;AAC5B,gBAAA,KAAI,CAACO,WAAL,CAAiBL,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACS,KAAhB,CAAjB;;AACAvC,gBAAAA,OAAO,CAAC+B,GAAR,6BAAsCI,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACS,KAAhB,CAAtC;AACD,eAHD,MAGO;AACLvC,gBAAAA,OAAO,CAACG,IAAR,CAAa,uCAAb;AACD;AACF,aAlCD,CAkCE,OAAOF,KAAP,EAAc;AACdD,cAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AArCsB;AAsCxB;AAED;AACF;AACA;AACA;;;AACEuC,QAAAA,WAAW,CAACD,KAAD,EAAgB;AACzB,eAAK1C,YAAL,GAAoB0C,KAApB;;AACA,cAAI,KAAKhC,UAAT,EAAqB;AACnB,iBAAKA,UAAL,CAAgB0C,MAAhB,GAAyB,KAAKpD,YAAL,CAAkBqD,cAAlB,EAAzB;AACD,WAFD,MAEO;AACLlD,YAAAA,OAAO,CAACG,IAAR,CAAa,yCAAb;AACD;AACF;AAED;AACF;AACA;;;AACQgB,QAAAA,kBAAkB,GAAG;AAAA;;AAAA;AACzB,gBAAMgC,MAAM,SAAS,MAAI,CAACC,kBAAL,EAArB;;AACA,gBAAID,MAAM,GAAG,CAAb,EAAgB;AACd,kBAAI,MAAI,CAACE,kBAAT,EAA6B;AAC3B,gBAAA,MAAI,CAACA,kBAAL,CAAwBC,IAAxB,CAA6BH,MAA7B;AACD,eAFD,MAEO;AACLnD,gBAAAA,OAAO,CAACG,IAAR,CAAa,iDAAb;AACD,eALa,CAOd;;;AACA,cAAA,MAAI,CAACN,YAAL,IAAqBsD,MAArB;;AACA,cAAA,MAAI,CAACX,WAAL,CAAiB,MAAI,CAAC3C,YAAtB;AACD;AAZwB;AAa1B;AAED;AACF;AACA;;;AACQuD,QAAAA,kBAAkB,GAAoB;AAAA;;AAAA;AAC1C,gBAAI;AACF,kBAAMT,QAAQ,SAASC,KAAK,sDACyB,MAAI,CAACpD,MAD9B,CAA5B;;AAGA,kBAAI,CAACmD,QAAQ,CAACE,EAAd,EAAkB;AAChB,oBAAMU,SAAS,SAASZ,QAAQ,CAACa,IAAT,EAAxB;AACA,sBAAM,IAAIV,KAAJ,0BACmBH,QAAQ,CAACI,MAD5B,oBACiDQ,SADjD,CAAN;AAGD;;AACD,kBAAMzB,IAAI,SAASa,QAAQ,CAACK,IAAT,EAAnB;AAEAhD,cAAAA,OAAO,CAAC+B,GAAR,CAAY,8BAAZ,EAA4CD,IAA5C;;AAEA,kBAAI,2BAA2BA,IAA/B,EAAqC;AACnC,oBAAMqB,MAAM,GAAGhB,IAAI,CAACC,KAAL,CAAWN,IAAI,CAAC2B,qBAAhB,CAAf;AACAzD,gBAAAA,OAAO,CAAC+B,GAAR,wIAAwCoB,MAAxC;AACA,uBAAOA,MAAP;AACD,eAJD,MAIO,IAAI,aAAarB,IAAjB,EAAuB;AAC5B9B,gBAAAA,OAAO,CAAC+B,GAAR,sHAAqCD,IAAI,CAACW,OAA1C;AACA,uBAAO,CAAP;AACD,eAHM,MAGA;AACLzC,gBAAAA,OAAO,CAACG,IAAR,CAAa,uCAAb,EAAsD2B,IAAtD;AACA,uBAAO,CAAP;AACD;AACF,aAzBD,CAyBE,OAAO7B,KAAP,EAAc;AACdD,cAAAA,OAAO,CAACC,KAAR,CAAc,yCAAd,EAAyDA,KAAzD;AACA,qBAAO,CAAP;AACD;AA7ByC;AA8B3C;AAED;AACF;AACA;AACA;;;AACEqC,QAAAA,YAAY,CAACoB,UAAD,EAAqB;AAC/B,eAAK/D,aAAL,GAAqB+D,UAArB;;AACA,cAAI,KAAK/C,WAAT,EAAsB;AACpB,iBAAKA,WAAL,CAAiBsC,MAAjB,GAA6B,KAAKtD,aAAlC,SAAmD,KAAKC,SAAxD;AACD,WAFD,MAEO;AACLI,YAAAA,OAAO,CAACG,IAAR,CAAa,0CAAb;AACD;AACF;AAED;AACF;AACA;AACA;;;AACE+B,QAAAA,YAAY,CAACxC,aAAD,EAAwB;AAClCA,UAAAA,aAAa,GAAGyC,IAAI,CAACC,KAAL,CACdD,IAAI,CAACwB,GAAL,CAAS,CAAT,EAAYxB,IAAI,CAACyB,GAAL,CAAS,KAAKnE,SAAd,EAAyBC,aAAzB,CAAZ,CADc,CAAhB;AAGA,eAAKA,aAAL,GAAqBA,aAArB;AAEAM,UAAAA,OAAO,CAAC+B,GAAR,CAAY,iBAAZ,EAA+B,KAAKrC,aAApC;AAEA,cAAMmE,QAAQ,GAAGnE,aAAa,GAAG,KAAKD,SAAtC;AACA,eAAKe,iBAAL,CAAuBqD,QAAvB,GAAkCA,QAAlC;AAEA,eAAKpD,gBAAL,CAAsBwC,MAAtB,GAAkCvD,aAAlC,SAAmD,KAAKD,SAAxD;AACD;AAED;AACF;AACA;AACA;;;AACEyB,QAAAA,YAAY,CAACoC,IAAD,EAAgB;AAC1B,cACE,KAAK/C,UAAL,IACA,KAAKC,iBADL,IAEA,KAAKC,gBAFL,IAGA,KAAKE,WAJP,EAKE;AACA,iBAAKJ,UAAL,CAAgBH,IAAhB,CAAqB0D,MAArB,GAA8BR,IAA9B;AACA,iBAAK9C,iBAAL,CAAuBJ,IAAvB,CAA4B0D,MAA5B,GAAqCR,IAArC;AACA,iBAAK7C,gBAAL,CAAsBL,IAAtB,CAA2B0D,MAA3B,GAAoCR,IAApC;AACA,iBAAK3C,WAAL,CAAiBP,IAAjB,CAAsB0D,MAAtB,GAA+BR,IAA/B;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;AACEzB,QAAAA,WAAW,CAACY,OAAD,EAAkBsB,IAAlB,EAAyC;AAAA,cAAvBA,IAAuB;AAAvBA,YAAAA,IAAuB,GAAR,MAAQ;AAAA;;AAClD,cAAI,KAAKrD,aAAT,EAAwB;AACtB,iBAAKA,aAAL,CAAmBuC,MAAnB,GAA4BR,OAA5B;;AACA,oBAAQsB,IAAR;AACE,mBAAK,SAAL;AACE,qBAAKrD,aAAL,CAAmBN,IAAnB,CAAwB4D,KAAxB,GAAgC,IAAIhF,KAAJ,CAAU,CAAV,EAAa,GAAb,EAAkB,CAAlB,CAAhC;AACA;;AACF,mBAAK,QAAL;AACE,qBAAK0B,aAAL,CAAmBN,IAAnB,CAAwB4D,KAAxB,GAAgC,IAAIhF,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,CAAhC;AACA;;AACF,mBAAK,SAAL;AACE,qBAAK0B,aAAL,CAAmBN,IAAnB,CAAwB4D,KAAxB,GAAgC,IAAIhF,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,CAApB,CAAhC;AACA;;AACF;AACE,qBAAK0B,aAAL,CAAmBN,IAAnB,CAAwB4D,KAAxB,GAAgC,IAAIhF,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAAhC;AAXJ;AAaD;AACF;AAED;AACF;AACA;;;AACEiF,QAAAA,gBAAgB,GAAW;AACzB,iBAAO,KAAKvE,aAAZ;AACD;AAED;AACF;AACA;;;AACEwE,QAAAA,gBAAgB,GAAW;AACzB,iBAAO,KAAKvE,aAAZ;AACD;AAED;AACF;AACA;;;AACEwE,QAAAA,aAAa,GAAG;AACd,cAAI,CAAC,KAAK5E,MAAN,IAAgB,CAAC,KAAKA,MAAL,CAAY6E,SAA7B,IAA0C,CAAC,KAAK5E,MAApD,EAA4D;AAC1DQ,YAAAA,OAAO,CAACC,KAAR,CACE,4EADF;AAGA;AACD;;AACD,eAAKV,MAAL,CAAYoC,IAAZ,CAAiB,UAAjB,EAA6B;AAAEnC,YAAAA,MAAM,EAAE,KAAKA;AAAf,WAA7B;AACAQ,UAAAA,OAAO,CAAC+B,GAAR,CAAY,mBAAZ;AACD;AAED;AACF;AACA;;;AACEsC,QAAAA,KAAK,GAAG;AACNrE,UAAAA,OAAO,CAAC+B,GAAR,CAAY,0BAAZ,EAAwC,KAAKrC,aAA7C;;AAEA,cAAI,CAAC,KAAKF,MAAV,EAAkB;AAChB,iBAAKqC,WAAL,CAAiB,4BAAjB,EAA+C,QAA/C;AACA;AACD;;AACD,cAAI,KAAKnC,aAAL,GAAqB,EAAzB,EAA6B;AAC3B,iBAAKmC,WAAL,CAAiB,8BAAjB,EAAiD,SAAjD;AACA;AACD;;AACD,cAAI,KAAKtC,MAAL,IAAe,KAAKA,MAAL,CAAY6E,SAA/B,EAA0C;AACxC,iBAAK7E,MAAL,CAAYoC,IAAZ,CAAiB,KAAjB,EAAwB;AAAEnC,cAAAA,MAAM,EAAE,KAAKA;AAAf,aAAxB;AACA,iBAAKqC,WAAL,CAAiB,gBAAjB,EAAmC,MAAnC;AACD,WAHD,MAGO;AACL,iBAAKA,WAAL,CAAiB,oCAAjB,EAAuD,QAAvD;AACD;AACF;AAED;AACF;AACA;;;AACSyC,QAAAA,SAAS,GAAW;AACzB,iBAAO,KAAK9E,MAAZ;AACD;AAED;AACF;AACA;AACA;;;AACS+E,QAAAA,SAAS,CAACC,EAAD,EAAa;AAC3B,eAAKhF,MAAL,GAAcgF,EAAd;;AACA,cAAI,KAAKjF,MAAL,IAAe,KAAKA,MAAL,CAAY6E,SAA/B,EAA0C;AACxC,iBAAK7E,MAAL,CAAYoC,IAAZ,CAAiB,UAAjB,EAA6B;AAAEnC,cAAAA,MAAM,EAAE,KAAKA;AAAf,aAA7B,EADwC,CAExC;AACD;AACF;AAED;AACF;AACA;AACA;;;AACSiF,QAAAA,cAAc,CAACD,EAAD,EAAa;AAChC,eAAKD,SAAL,CAAeC,EAAf,EADgC,CAEhC;AACD;;AA3b0C,O,UAE5BzE,S,GAA2B,I;;;;;iBAatB,I;;;;;;;iBAGa,I;;;;;;;iBAGP,I;;;;;;;iBAGH,I;;;;;;;iBAGF,I;;;;;;;iBAGU,I;;;;;;;iBAGU,I","sourcesContent":["// assets/scripts/SocketManager.ts\r\n\r\nimport { _decorator, Component, Label, Color, ProgressBar, Node } from \"cc\";\r\nimport { IncomeManager } from \"./IncomeManager\"; // Убедитесь, что путь корректный\r\nimport { PassiveIncomeModal } from \"./PassiveIncomeModal\"; // Импортируем модальное окно пассивного дохода\r\ndeclare const io: any; // Глобальная переменная для socket.io\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SocketManager\")\r\nexport class SocketManager extends Component {\r\n  // Статический экземпляр для Singleton\r\n  private static _instance: SocketManager = null;\r\n\r\n  // Геттер для доступа к экземпляру Singleton\r\n  public static get instance(): SocketManager {\r\n    if (!SocketManager._instance) {\r\n      console.error(\r\n        \"SocketManager не инициализирован. Убедитесь, что он добавлен на ноду в сцене.\"\r\n      );\r\n    }\r\n    return SocketManager._instance;\r\n  }\r\n\r\n  @property(Label)\r\n  coinsLabel: Label = null;\r\n\r\n  @property(ProgressBar)\r\n  energyProgressBar: ProgressBar = null;\r\n\r\n  @property(Label)\r\n  energyValueLabel: Label = null;\r\n\r\n  @property(Label)\r\n  messagesLabel: Label = null;\r\n\r\n  @property(Label)\r\n  boostsLabel: Label = null; // Свойство для отображения количества бустов\r\n\r\n  @property(IncomeManager)\r\n  incomeManager: IncomeManager = null; // Ссылка на IncomeManager\r\n\r\n  @property(PassiveIncomeModal)\r\n  passiveIncomeModal: PassiveIncomeModal = null; // Ссылка на компонент модального окна\r\n\r\n  private socket: any = null;\r\n  private userId: number = 124124124; // Инициализируйте или получите динамически\r\n  private maxEnergy: number = 2000; // Максимальное значение энергии\r\n  private currentEnergy: number = 0; // Текущее значение энергии\r\n  private currentBoosts: number = 0; // Текущее количество бустов\r\n  private maxBoosts: number = 6; // Максимальное количество бустов\r\n  private currentCoins: number = 0; // Текущее количество монет\r\n\r\n  onLoad() {\r\n    if (SocketManager._instance && SocketManager._instance !== this) {\r\n      console.warn(\"SocketManager уже существует. Удаление дубликата.\");\r\n      this.node.destroy();\r\n      return;\r\n    }\r\n    SocketManager._instance = this;\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      !this.coinsLabel ||\r\n      !this.energyProgressBar ||\r\n      !this.energyValueLabel ||\r\n      !this.messagesLabel ||\r\n      !this.boostsLabel\r\n    ) {\r\n      console.error(\"Не все необходимые компоненты назначены в SocketManager.\");\r\n      return;\r\n    }\r\n\r\n    // Если incomeManager не установлен в инспекторе, пытаемся найти его в сцене\r\n    if (!this.incomeManager) {\r\n      const incomeManagerNode =\r\n        this.node.scene.getChildByName(\"IncomeManagerNode\"); // Замените на реальное имя узла\r\n      if (incomeManagerNode) {\r\n        this.incomeManager = incomeManagerNode.getComponent(IncomeManager);\r\n      } else {\r\n        console.warn(\"IncomeManager не найден в сцене.\");\r\n      }\r\n    }\r\n\r\n    this.autoConnect();\r\n    this.showUserInfo(false);\r\n\r\n    // Проверяем пассивный доход\r\n    this.checkPassiveIncome();\r\n  }\r\n\r\n  onDestroy() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n    // Очистка экземпляра Singleton при уничтожении\r\n    if (SocketManager._instance === this) {\r\n      SocketManager._instance = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Автоматически подключается к серверу Socket.IO с фиксированным userId\r\n   */\r\n  autoConnect() {\r\n    try {\r\n      this.socket = io(\"https://dev.simatap.ru\", {\r\n        transports: [\"websocket\"],\r\n        secure: true,\r\n        rejectUnauthorized: false,\r\n      });\r\n\r\n      this.socket.on(\"connect\", () => {\r\n        this.socket.emit(\"register\", { userId: this.userId });\r\n        this.showUserInfo(true);\r\n\r\n        // Получаем начальные данные\r\n        this.fetchInitialData();\r\n      });\r\n\r\n      this.socket.on(\"disconnect\", () => {\r\n        this.showMessage(\"Отключено от сервера.\", \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"energyUpdated\", (data: any) => {\r\n        console.log(\"Received energyUpdated event:\", data);\r\n        if (data.energy_left !== undefined) {\r\n          this.updateEnergy(Math.round(data.energy_left));\r\n        } else {\r\n          console.warn(\r\n            \"energyUpdated event received, but energy_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик обновления количества бустов\r\n      this.socket.on(\"boostsUpdated\", (data: any) => {\r\n        console.log(\"Received boostsUpdated event:\", data);\r\n        if (data.boosts_left !== undefined) {\r\n          this.updateBoosts(data.boosts_left);\r\n        } else {\r\n          console.warn(\r\n            \"boostsUpdated event received, but boosts_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик события обновления монет (если сервер отправляет такое событие)\r\n      this.socket.on(\"coinsUpdated\", (data: any) => {\r\n        console.log(\"Received coinsUpdated event:\", data);\r\n        if (data.coins !== undefined) {\r\n          this.updateCoins(Math.round(data.coins));\r\n        } else {\r\n          console.warn(\"coinsUpdated event received, but coins is undefined.\");\r\n        }\r\n      });\r\n\r\n      // Остальные обработчики событий\r\n\r\n      this.socket.on(\"tapError\", (data: any) => {\r\n        this.showMessage(data.message, \"warning\");\r\n      });\r\n\r\n      this.socket.on(\"registrationError\", (data: any) => {\r\n        this.showMessage(data.message, \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"connect_error\", (error: any) => {\r\n        this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      });\r\n\r\n      // Обработчик ответа на активацию буста\r\n      this.socket.on(\"boostActivated\", (data: any) => {\r\n        console.log(\"Boost activation response:\", data);\r\n        // Обновляем энергию, если сервер вернул новое значение\r\n        if (data.newEnergyValue !== undefined) {\r\n          this.updateEnergy(Math.round(data.newEnergyValue));\r\n        }\r\n        // Обновление количества бустов будет обработано через событие 'boostsUpdated'\r\n      });\r\n\r\n      // Обработчик ошибки при активации буста\r\n      this.socket.on(\"boostError\", (data: any) => {\r\n        console.error(\"Ошибка активации буста:\", data.message);\r\n        // Ошибки при активации буста будут обработаны в BoostController\r\n      });\r\n    } catch (error) {\r\n      this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      console.error(\"Socket connection error:\", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает начальные данные с API и обновляет состояние\r\n   */\r\n  async fetchInitialData() {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/users/${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"API response:\", data);\r\n\r\n      // Обновляем энергию\r\n      if (data.energy_left !== undefined) {\r\n        this.updateEnergy(Math.round(data.energy_left));\r\n        console.log(`Initial energy fetched: ${Math.round(data.energy_left)}`);\r\n      } else {\r\n        console.warn(\"Energy data not found in API response.\");\r\n      }\r\n\r\n      // Обновляем количество бустов\r\n      if (data.boosts_left !== undefined) {\r\n        this.updateBoosts(data.boosts_left);\r\n        console.log(`Initial boosts fetched: ${data.boosts_left}`);\r\n      } else {\r\n        console.warn(\"Boosts data not found in API response.\");\r\n      }\r\n\r\n      // Если в ответе есть поле с монетами, обновляем его\r\n      if (data.coins !== undefined) {\r\n        this.updateCoins(Math.round(data.coins));\r\n        console.log(`Initial coins fetched: ${Math.round(data.coins)}`);\r\n      } else {\r\n        console.warn(\"Coins data not found in API response.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching initial data:\", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество монет и соответствующую метку.\r\n   * @param coins Новое количество монет.\r\n   */\r\n  updateCoins(coins: number) {\r\n    this.currentCoins = coins;\r\n    if (this.coinsLabel) {\r\n      this.coinsLabel.string = this.currentCoins.toLocaleString();\r\n    } else {\r\n      console.warn(\"coinsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверяет и обрабатывает пассивный доход\r\n   */\r\n  async checkPassiveIncome() {\r\n    const income = await this.fetchPassiveIncome();\r\n    if (income > 0) {\r\n      if (this.passiveIncomeModal) {\r\n        this.passiveIncomeModal.show(income);\r\n      } else {\r\n        console.warn(\"PassiveIncomeModal не назначен в SocketManager.\");\r\n      }\r\n\r\n      // Обновляем количество монет\r\n      this.currentCoins += income;\r\n      this.updateCoins(this.currentCoins);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает пассивный доход с сервера и возвращает его\r\n   */\r\n  async fetchPassiveIncome(): Promise<number> {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/passiveIncome?userId=${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(\r\n          `HTTP error! status: ${response.status}, response: ${errorText}`\r\n        );\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"Passive income API response:\", data);\r\n\r\n      if (\"passive_income_earned\" in data) {\r\n        const income = Math.round(data.passive_income_earned);\r\n        console.log(`Пассивный доход получен: ${income}`);\r\n        return income;\r\n      } else if (\"message\" in data) {\r\n        console.log(`Сообщение от сервера: ${data.message}`);\r\n        return 0;\r\n      } else {\r\n        console.warn(\"Неизвестный формат ответа от сервера:\", data);\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении пассивного дохода:\", error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество бустов и соответствующую метку.\r\n   * @param boostsLeft Текущее количество оставшихся бустов.\r\n   */\r\n  updateBoosts(boostsLeft: number) {\r\n    this.currentBoosts = boostsLeft;\r\n    if (this.boostsLabel) {\r\n      this.boostsLabel.string = `${this.currentBoosts}/${this.maxBoosts}`;\r\n    } else {\r\n      console.warn(\"boostsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет прогресс-бар энергии и текстовую метку.\r\n   * @param currentEnergy Текущее значение энергии.\r\n   */\r\n  updateEnergy(currentEnergy: number) {\r\n    currentEnergy = Math.round(\r\n      Math.max(0, Math.min(this.maxEnergy, currentEnergy))\r\n    );\r\n    this.currentEnergy = currentEnergy;\r\n\r\n    console.log(\"Energy updated:\", this.currentEnergy);\r\n\r\n    const progress = currentEnergy / this.maxEnergy;\r\n    this.energyProgressBar.progress = progress;\r\n\r\n    this.energyValueLabel.string = `${currentEnergy}/${this.maxEnergy}`;\r\n  }\r\n\r\n  /**\r\n   * Показывает или скрывает UserInfo\r\n   * @param show Показывать или скрывать\r\n   */\r\n  showUserInfo(show: boolean) {\r\n    if (\r\n      this.coinsLabel &&\r\n      this.energyProgressBar &&\r\n      this.energyValueLabel &&\r\n      this.boostsLabel\r\n    ) {\r\n      this.coinsLabel.node.active = show;\r\n      this.energyProgressBar.node.active = show;\r\n      this.energyValueLabel.node.active = show;\r\n      this.boostsLabel.node.active = show;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отображает сообщение пользователю\r\n   * @param message Текст сообщения\r\n   * @param type Тип сообщения ('success', 'danger', 'warning', 'info')\r\n   */\r\n  showMessage(message: string, type: string = \"info\") {\r\n    if (this.messagesLabel) {\r\n      this.messagesLabel.string = message;\r\n      switch (type) {\r\n        case \"success\":\r\n          this.messagesLabel.node.color = new Color(0, 255, 0);\r\n          break;\r\n        case \"danger\":\r\n          this.messagesLabel.node.color = new Color(255, 0, 0);\r\n          break;\r\n        case \"warning\":\r\n          this.messagesLabel.node.color = new Color(255, 165, 0);\r\n          break;\r\n        default:\r\n          this.messagesLabel.node.color = new Color(255, 255, 255);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее значение энергии\r\n   */\r\n  getCurrentEnergy(): number {\r\n    return this.currentEnergy;\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее количество бустов\r\n   */\r\n  getCurrentBoosts(): number {\r\n    return this.currentBoosts;\r\n  }\r\n\r\n  /**\r\n   * Активирует буст\r\n   */\r\n  activateBoost() {\r\n    if (!this.socket || !this.socket.connected || !this.userId) {\r\n      console.error(\r\n        \"Не удалось использовать буст: сокет не подключен или userId не установлен.\"\r\n      );\r\n      return;\r\n    }\r\n    this.socket.emit(\"useBoost\", { userId: this.userId });\r\n    console.log(\"Буст активирован.\");\r\n  }\r\n\r\n  /**\r\n   * Обработчик события \"tap\"\r\n   */\r\n  onTap() {\r\n    console.log(\"Current energy in onTap:\", this.currentEnergy);\r\n\r\n    if (!this.userId) {\r\n      this.showMessage(\"Пользователь не подключен.\", \"danger\");\r\n      return;\r\n    }\r\n    if (this.currentEnergy < 13) {\r\n      this.showMessage(\"Не хватает энергии для тапа.\", \"warning\");\r\n      return;\r\n    }\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"tap\", { userId: this.userId });\r\n      this.showMessage(\"Тап отправлен!\", \"info\");\r\n    } else {\r\n      this.showMessage(\"Соединение с сервером отсутствует.\", \"danger\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает текущий userId\r\n   */\r\n  public getUserId(): number {\r\n    return this.userId;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает новый userId\r\n   * @param id Новый ID пользователя\r\n   */\r\n  public setUserId(id: number) {\r\n    this.userId = id;\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"register\", { userId: this.userId });\r\n      // Дополнительные действия при изменении userId, если необходимо\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализирует пользователя (например, после логина)\r\n   * @param id ID пользователя\r\n   */\r\n  public initializeUser(id: number) {\r\n    this.setUserId(id);\r\n    // Другие действия по инициализации пользователя\r\n  }\r\n}\r\n"]}