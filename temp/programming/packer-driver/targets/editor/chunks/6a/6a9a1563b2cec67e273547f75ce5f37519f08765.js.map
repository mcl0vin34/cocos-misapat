{"version":3,"sources":["file:///C:/GitHub/cocos-misapat/assets/scripts/SocketManager.ts"],"names":["_decorator","Component","Label","Color","ProgressBar","IncomeManager","PassiveIncomeModal","ccclass","property","SocketManager","socket","userId","userData","maxEnergy","currentEnergy","currentBoosts","maxBoosts","currentCoins","instance","_instance","console","error","onLoad","warn","node","destroy","start","coinsLabel","energyProgressBar","energyValueLabel","messagesLabel","boostsLabel","incomeManager","incomeManagerNode","scene","getChildByName","getComponent","initializeUser","showUserInfo","onDestroy","disconnect","tg","window","Telegram","WebApp","log","Promise","resolve","onEvent","ready","initDataUnsafe","user","id","username","first_name","last_name","language_code","is_premium","photo_url","full_name","useMockData","createOrUpdateUser","fetchInitialData","autoConnect","checkPassiveIncome","queryParams","URLSearchParams","toString","postResponse","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","io","transports","secure","rejectUnauthorized","on","emit","showMessage","data","energy_left","undefined","updateEnergy","Math","round","boosts_left","updateBoosts","coins","updateCoins","message","newEnergyValue","response","status","json","fetchTotalCoins","string","toLocaleString","income","fetchPassiveIncome","passiveIncomeModal","show","errorText","text","passive_income_earned","boostsLeft","max","min","progress","active","type","color","getCurrentEnergy","getCurrentBoosts","activateBoost","connected","onTap","getUserId","setUserId"],"mappings":"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","sourcesContent":["// assets/scripts/SocketManager.ts\r\n\r\nimport { _decorator, Component, Label, Color, ProgressBar, Node } from \"cc\";\r\nimport { IncomeManager } from \"./IncomeManager\"; // Убедитесь, что путь корректный\r\nimport { PassiveIncomeModal } from \"./PassiveIncomeModal\"; // Импортируем модальное окно пассивного дохода\r\ndeclare const io: any; // Глобальная переменная для socket.io\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SocketManager\")\r\nexport class SocketManager extends Component {\r\n  // Статический экземпляр для Singleton\r\n  private static _instance: SocketManager = null;\r\n\r\n  // Геттер для доступа к экземпляру Singleton\r\n  public static get instance(): SocketManager {\r\n    if (!SocketManager._instance) {\r\n      console.error(\r\n        \"SocketManager не инициализирован. Убедитесь, что он добавлен на ноду в сцене.\"\r\n      );\r\n    }\r\n    return SocketManager._instance;\r\n  }\r\n\r\n  @property(Label)\r\n  coinsLabel: Label = null;\r\n\r\n  @property(ProgressBar)\r\n  energyProgressBar: ProgressBar = null;\r\n\r\n  @property(Label)\r\n  energyValueLabel: Label = null;\r\n\r\n  @property(Label)\r\n  messagesLabel: Label = null;\r\n\r\n  @property(Label)\r\n  boostsLabel: Label = null; // Свойство для отображения количества бустов\r\n\r\n  @property(IncomeManager)\r\n  incomeManager: IncomeManager = null; // Ссылка на IncomeManager\r\n\r\n  @property(PassiveIncomeModal)\r\n  passiveIncomeModal: PassiveIncomeModal = null; // Ссылка на компонент модального окна\r\n\r\n  private socket: any = null;\r\n  private userId: number = null; // Инициализируем динамически\r\n  private userData: any = null; // Храним данные пользователя\r\n  private maxEnergy: number = 2000; // Максимальное значение энергии\r\n  private currentEnergy: number = 0; // Текущее значение энергии\r\n  private currentBoosts: number = 0; // Текущее количество бустов\r\n  private maxBoosts: number = 6; // Максимальное количество бустов\r\n  private currentCoins: number = 0; // Текущее количество монет\r\n\r\n  onLoad() {\r\n    if (SocketManager._instance && SocketManager._instance !== this) {\r\n      console.warn(\"SocketManager уже существует. Удаление дубликата.\");\r\n      this.node.destroy();\r\n      return;\r\n    }\r\n    SocketManager._instance = this;\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      !this.coinsLabel ||\r\n      !this.energyProgressBar ||\r\n      !this.energyValueLabel ||\r\n      !this.messagesLabel ||\r\n      !this.boostsLabel\r\n    ) {\r\n      console.error(\"Не все необходимые компоненты назначены в SocketManager.\");\r\n      return;\r\n    }\r\n\r\n    // Если incomeManager не установлен в инспекторе, пытаемся найти его в сцене\r\n    if (!this.incomeManager) {\r\n      const incomeManagerNode =\r\n        this.node.scene.getChildByName(\"IncomeManagerNode\"); // Замените на реальное имя узла\r\n      if (incomeManagerNode) {\r\n        this.incomeManager = incomeManagerNode.getComponent(IncomeManager);\r\n      } else {\r\n        console.warn(\"IncomeManager не найден в сцене.\");\r\n      }\r\n    }\r\n\r\n    // Инициализируем пользователя\r\n    this.initializeUser();\r\n\r\n    this.showUserInfo(false);\r\n  }\r\n\r\n  onDestroy() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n    // Очистка экземпляра Singleton при уничтожении\r\n    if (SocketManager._instance === this) {\r\n      SocketManager._instance = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализирует пользователя, получая данные из Telegram WebApp API или используя моковые данные\r\n   */\r\n  async initializeUser() {\r\n    try {\r\n      const tg = (window as any).Telegram?.WebApp;\r\n\r\n      if (tg) {\r\n        console.log(\"Telegram WebApp доступен.\");\r\n\r\n        // Ждём, пока Telegram WebApp будет готов\r\n        await new Promise<void>((resolve) => {\r\n          tg.onEvent(\"webAppReady\", () => {\r\n            resolve();\r\n          });\r\n          tg.ready();\r\n        });\r\n\r\n        if (tg.initDataUnsafe?.user?.id) {\r\n          const userData = {\r\n            id: tg.initDataUnsafe.user.id,\r\n            username: tg.initDataUnsafe.user.username,\r\n            first_name: tg.initDataUnsafe.user.first_name,\r\n            last_name: tg.initDataUnsafe.user.last_name || \"\",\r\n            language_code: tg.initDataUnsafe.user.language_code || \"\",\r\n            is_premium: tg.initDataUnsafe.user.is_premium || false,\r\n            photo_url: tg.initDataUnsafe.user.photo_url || \"\",\r\n            full_name: `${tg.initDataUnsafe.user.first_name} ${\r\n              tg.initDataUnsafe.user.last_name || \"\"\r\n            }`,\r\n          };\r\n\r\n          console.log(\"Данные пользователя Telegram:\", userData);\r\n\r\n          this.userId = userData.id;\r\n          this.userData = userData;\r\n        } else {\r\n          console.warn(\"Данные пользователя не найдены в tg.initDataUnsafe.\");\r\n          this.useMockData();\r\n        }\r\n      } else {\r\n        console.warn(\"Telegram WebApp недоступен. Используем моковые данные.\");\r\n        this.useMockData();\r\n      }\r\n\r\n      // Продолжаем инициализацию\r\n      await this.createOrUpdateUser(this.userData);\r\n      await this.fetchInitialData();\r\n      this.autoConnect();\r\n      this.showUserInfo(true);\r\n      this.checkPassiveIncome();\r\n    } catch (error) {\r\n      console.error(\"Ошибка при инициализации пользователя:\", error);\r\n    }\r\n  }\r\n\r\n  private useMockData() {\r\n    const userData = {\r\n      id: 230230230,\r\n      username: \"230 bro's\",\r\n      first_name: \"madesta\",\r\n      last_name: \"\",\r\n      language_code: \"en\",\r\n      is_premium: false,\r\n      photo_url: \"\",\r\n      full_name: \"Test User\",\r\n    };\r\n    this.userId = userData.id;\r\n    this.userData = userData;\r\n  }\r\n\r\n  /**\r\n   * Создает или обновляет пользователя на сервере\r\n   * @param userData Данные пользователя\r\n   */\r\n  async createOrUpdateUser(userData: any) {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        id: userData.id.toString(),\r\n        username: userData.username || \"\",\r\n        first_name: userData.first_name || \"\",\r\n        last_name: userData.last_name || \"\",\r\n      });\r\n\r\n      const postResponse = await fetch(\r\n        `https://dev.simatap.ru/api/users?${queryParams.toString()}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({}),\r\n        }\r\n      );\r\n\r\n      if (!postResponse.ok) {\r\n        throw new Error(\r\n          `Ошибка при отправке POST запроса: ${postResponse.statusText}`\r\n        );\r\n      }\r\n\r\n      console.log(\"Пользователь успешно создан или обновлен.\");\r\n      console.log(\"это версия артемия\");\r\n    } catch (error) {\r\n      console.warn(\r\n        \"Ошибка при создании или обновлении пользователя. Используем моковые данные.\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Автоматически подключается к серверу Socket.IO с userId\r\n   */\r\n\r\n  autoConnect() {\r\n    try {\r\n      this.socket = io(\"https://dev.simatap.ru\", {\r\n        transports: [\"websocket\"],\r\n        secure: true,\r\n        rejectUnauthorized: false,\r\n      });\r\n\r\n      this.socket.on(\"connect\", () => {\r\n        this.socket.emit(\"register\", { userId: this.userId });\r\n        this.showUserInfo(true);\r\n      });\r\n\r\n      this.socket.on(\"disconnect\", () => {\r\n        this.showMessage(\"Отключено от сервера.\", \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"energyUpdated\", (data: any) => {\r\n        if (data.energy_left !== undefined) {\r\n          this.updateEnergy(Math.round(data.energy_left));\r\n        } else {\r\n          console.warn(\r\n            \"energyUpdated event received, but energy_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик обновления количества бустов\r\n      this.socket.on(\"boostsUpdated\", (data: any) => {\r\n        console.log(\"Received boostsUpdated event:\", data);\r\n        if (data.boosts_left !== undefined) {\r\n          this.updateBoosts(data.boosts_left);\r\n        } else {\r\n          console.warn(\r\n            \"boostsUpdated event received, but boosts_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик события обновления монет\r\n      this.socket.on(\"coinsUpdated\", (data: any) => {\r\n        if (data.coins !== undefined) {\r\n          this.updateCoins(Math.round(data.coins));\r\n        } else {\r\n          console.warn(\"coinsUpdated event received, but coins is undefined.\");\r\n        }\r\n      });\r\n\r\n      // Остальные обработчики событий\r\n\r\n      this.socket.on(\"tapError\", (data: any) => {\r\n        this.showMessage(data.message, \"warning\");\r\n      });\r\n\r\n      this.socket.on(\"registrationError\", (data: any) => {\r\n        this.showMessage(data.message, \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"connect_error\", (error: any) => {\r\n        this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      });\r\n\r\n      // Обработчик ответа на активацию буста\r\n      this.socket.on(\"boostActivated\", (data: any) => {\r\n        console.log(\"Boost activation response:\", data);\r\n        // Обновляем энергию, если сервер вернул новое значение\r\n        if (data.newEnergyValue !== undefined) {\r\n          this.updateEnergy(Math.round(data.newEnergyValue));\r\n        }\r\n        // Обновление количества бустов будет обработано через событие 'boostsUpdated'\r\n      });\r\n\r\n      // Обработчик ошибки при активации буста\r\n      this.socket.on(\"boostError\", (data: any) => {\r\n        console.error(\"Ошибка активации буста:\", data.message);\r\n        // Ошибки при активации буста будут обработаны в BoostController\r\n      });\r\n    } catch (error) {\r\n      this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      console.error(\"Socket connection error:\", error);\r\n    }\r\n  }\r\n\r\n  async fetchInitialData() {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/users/${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"API response:\", data);\r\n\r\n      // Обновляем энергию\r\n      if (data.energy_left !== undefined) {\r\n        this.updateEnergy(Math.round(data.energy_left));\r\n        console.log(`Initial energy fetched: ${Math.round(data.energy_left)}`);\r\n      } else {\r\n        console.warn(\"Energy data not found in API response.\");\r\n      }\r\n\r\n      // Обновляем количество бустов\r\n      if (data.boosts_left !== undefined) {\r\n        this.updateBoosts(data.boosts_left);\r\n        console.log(`Initial boosts fetched: ${data.boosts_left}`);\r\n      } else {\r\n        console.warn(\"Boosts data not found in API response.\");\r\n      }\r\n\r\n      // Получаем общее количество монет\r\n      await this.fetchTotalCoins();\r\n    } catch (error) {\r\n      console.error(\"Error fetching initial data:\", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает общее количество монет пользователя\r\n   */\r\n  async fetchTotalCoins() {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/totalCoins/${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (data.coins !== undefined) {\r\n        this.updateCoins(Math.round(data.coins));\r\n        console.log(`Total coins fetched: ${Math.round(data.coins)}`);\r\n      } else {\r\n        console.warn(\"Coins data not found in API response.\");\r\n      }\r\n    } catch (error) {\r\n      console.warn(\r\n        \"Ошибка при получении количества монет. Используем значение по умолчанию 0.\",\r\n        error\r\n      );\r\n      this.updateCoins(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество монет и соответствующую метку.\r\n   * @param coins Новое количество монет.\r\n   */\r\n  updateCoins(coins: number) {\r\n    this.currentCoins = coins;\r\n    if (this.coinsLabel) {\r\n      this.coinsLabel.string = this.currentCoins.toLocaleString();\r\n    } else {\r\n      console.warn(\"coinsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверяет и обрабатывает пассивный доход\r\n   */\r\n  async checkPassiveIncome() {\r\n    const income = await this.fetchPassiveIncome();\r\n    if (income > 0) {\r\n      if (this.passiveIncomeModal) {\r\n        this.passiveIncomeModal.show(income);\r\n      } else {\r\n        console.warn(\"PassiveIncomeModal не назначен в SocketManager.\");\r\n      }\r\n\r\n      // Обновляем количество монет\r\n      this.currentCoins += income;\r\n      this.updateCoins(this.currentCoins);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает пассивный доход с сервера и возвращает его\r\n   */\r\n  async fetchPassiveIncome(): Promise<number> {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/passiveIncome?userId=${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(\r\n          `HTTP error! status: ${response.status}, response: ${errorText}`\r\n        );\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"Passive income API response:\", data);\r\n\r\n      if (\"passive_income_earned\" in data) {\r\n        const income = Math.round(data.passive_income_earned);\r\n        console.log(`Пассивный доход получен: ${income}`);\r\n        return income;\r\n      } else if (\"message\" in data) {\r\n        console.log(`Сообщение от сервера: ${data.message}`);\r\n        return 0;\r\n      } else {\r\n        console.warn(\"Неизвестный формат ответа от сервера:\", data);\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении пассивного дохода:\", error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество бустов и соответствующую метку.\r\n   * @param boostsLeft Текущее количество оставшихся бустов.\r\n   */\r\n  updateBoosts(boostsLeft: number) {\r\n    this.currentBoosts = boostsLeft;\r\n    if (this.boostsLabel) {\r\n      this.boostsLabel.string = `${this.currentBoosts}/${this.maxBoosts}`;\r\n    } else {\r\n      console.warn(\"boostsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет прогресс-бар энергии и текстовую метку.\r\n   * @param currentEnergy Текущее значение энергии.\r\n   */\r\n  updateEnergy(currentEnergy: number) {\r\n    currentEnergy = Math.round(\r\n      Math.max(0, Math.min(this.maxEnergy, currentEnergy))\r\n    );\r\n    this.currentEnergy = currentEnergy;\r\n\r\n    const progress = currentEnergy / this.maxEnergy;\r\n    this.energyProgressBar.progress = progress;\r\n\r\n    this.energyValueLabel.string = `${currentEnergy}/${this.maxEnergy}`;\r\n  }\r\n\r\n  /**\r\n   * Показывает или скрывает UserInfo\r\n   * @param show Показывать или скрывать\r\n   */\r\n  showUserInfo(show: boolean) {\r\n    if (\r\n      this.coinsLabel &&\r\n      this.energyProgressBar &&\r\n      this.energyValueLabel &&\r\n      this.boostsLabel\r\n    ) {\r\n      this.coinsLabel.node.active = show;\r\n      this.energyProgressBar.node.active = show;\r\n      this.energyValueLabel.node.active = show;\r\n      this.boostsLabel.node.active = show;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отображает сообщение пользователю\r\n   * @param message Текст сообщения\r\n   * @param type Тип сообщения ('success', 'danger', 'warning', 'info')\r\n   */\r\n  showMessage(message: string, type: string = \"info\") {\r\n    if (this.messagesLabel) {\r\n      this.messagesLabel.string = message;\r\n      switch (type) {\r\n        case \"success\":\r\n          this.messagesLabel.node.color = new Color(0, 255, 0);\r\n          break;\r\n        case \"danger\":\r\n          this.messagesLabel.node.color = new Color(255, 0, 0);\r\n          break;\r\n        case \"warning\":\r\n          this.messagesLabel.node.color = new Color(255, 165, 0);\r\n          break;\r\n        default:\r\n          this.messagesLabel.node.color = new Color(255, 255, 255);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее значение энергии\r\n   */\r\n  getCurrentEnergy(): number {\r\n    return this.currentEnergy;\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее количество бустов\r\n   */\r\n  getCurrentBoosts(): number {\r\n    return this.currentBoosts;\r\n  }\r\n\r\n  /**\r\n   * Активирует буст\r\n   */\r\n  activateBoost() {\r\n    if (!this.socket || !this.socket.connected || !this.userId) {\r\n      console.error(\r\n        \"Не удалось использовать буст: сокет не подключен или userId не установлен.\"\r\n      );\r\n      return;\r\n    }\r\n    this.socket.emit(\"useBoost\", { userId: this.userId });\r\n    console.log(\"Буст активирован.\");\r\n  }\r\n\r\n  /**\r\n   * Обработчик события \"tap\"\r\n   */\r\n  onTap() {\r\n    if (!this.userId) {\r\n      this.showMessage(\"Пользователь не подключен.\", \"danger\");\r\n      return;\r\n    }\r\n    if (this.currentEnergy < 13) {\r\n      this.showMessage(\"Не хватает энергии для тапа.\", \"warning\");\r\n      return;\r\n    }\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"tap\", { userId: this.userId });\r\n      this.showMessage(\"Тап отправлен!\", \"info\");\r\n    } else {\r\n      this.showMessage(\"Соединение с сервером отсутствует.\", \"danger\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает текущий userId\r\n   */\r\n  public getUserId(): number {\r\n    return this.userId;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает новый userId\r\n   * @param id Новый ID пользователя\r\n   */\r\n  public setUserId(id: number) {\r\n    this.userId = id;\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"register\", { userId: this.userId });\r\n      // Дополнительные действия при изменении userId, если необходимо\r\n    }\r\n  }\r\n}\r\n"]}