{"version":3,"sources":["file:///C:/GitHub/cocos-misapat/assets/scripts/SocketManager.ts"],"names":["_decorator","Component","Label","Color","ProgressBar","EventTarget","IncomeManager","PassiveIncomeModal","ccclass","property","SocketManager","socket","userId","userData","maxEnergy","currentEnergy","currentBoosts","maxBoosts","currentCoins","eventTarget","instance","_instance","console","error","on","event","callback","target","off","onLoad","warn","node","destroy","start","coinsLabel","energyProgressBar","energyValueLabel","messagesLabel","boostsLabel","incomeManager","incomeManagerNode","scene","getChildByName","getComponent","initializeUser","showUserInfo","onDestroy","disconnect","loadTelegramSDK","Promise","resolve","reject","window","Telegram","script","document","createElement","src","onload","onerror","Error","head","appendChild","tg","WebApp","log","initDataUnsafe","ready","expand","disableVerticalSwipes","isVerticalSwipesEnabled","setBackgroundColor","web_app_setup_swipe_behavior","allow_vertical_swipe","user","id","username","first_name","last_name","language_code","is_premium","photo_url","full_name","useMockData","createOrUpdateUser","fetchInitialData","autoConnect","checkPassiveIncome","start_param","startParam","startsWith","referrerId","replace","referralId","toString","response","fetch","method","headers","body","JSON","stringify","ok","data","json","message","emit","queryParams","URLSearchParams","postResponse","statusText","io","transports","secure","rejectUnauthorized","showMessage","energy_left","undefined","updateEnergy","Math","round","boosts_left","updateBoosts","coins","updateCoins","newEnergyValue","status","fetchTotalCoins","string","toLocaleString","income","fetchPassiveIncome","passiveIncomeModal","show","errorText","text","passive_income_earned","boostsLeft","max","min","progress","active","type","color","getCurrentEnergy","getCurrentBoosts","activateBoost","connected","onTap","triggerHapticFeedback","getUserId","setUserId","HapticFeedback","impactOccurred"],"mappings":"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","sourcesContent":["// assets/scripts/SocketManager.ts\r\n\r\nimport {\r\n  _decorator,\r\n  Component,\r\n  Label,\r\n  Color,\r\n  ProgressBar,\r\n  Node,\r\n  EventTarget,\r\n} from \"cc\";\r\nimport { IncomeManager } from \"./IncomeManager\";\r\nimport { PassiveIncomeModal } from \"./PassiveIncomeModal\";\r\ndeclare const io: any;\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SocketManager\")\r\nexport class SocketManager extends Component {\r\n  private static _instance: SocketManager = null;\r\n\r\n  public static get instance(): SocketManager {\r\n    if (!SocketManager._instance) {\r\n      console.error(\r\n        \"SocketManager не инициализирован. Убедитесь, что он добавлен на ноду в сцене.\"\r\n      );\r\n    }\r\n    return SocketManager._instance;\r\n  }\r\n\r\n  @property(Label)\r\n  coinsLabel: Label = null;\r\n\r\n  @property(ProgressBar)\r\n  energyProgressBar: ProgressBar = null;\r\n\r\n  @property(Label)\r\n  energyValueLabel: Label = null;\r\n\r\n  @property(Label)\r\n  messagesLabel: Label = null;\r\n\r\n  @property(Label)\r\n  boostsLabel: Label = null;\r\n\r\n  @property(IncomeManager)\r\n  incomeManager: IncomeManager = null;\r\n\r\n  @property(PassiveIncomeModal)\r\n  passiveIncomeModal: PassiveIncomeModal = null;\r\n\r\n  private socket: any = null;\r\n  private userId: number = null;\r\n  private userData: any = null;\r\n  private maxEnergy: number = 2000;\r\n  private currentEnergy: number = 0;\r\n  private currentBoosts: number = 0;\r\n  private maxBoosts: number = 6;\r\n  private currentCoins: number = 0;\r\n\r\n  // Добавление EventTarget для управления событиями\r\n  private eventTarget: EventTarget = new EventTarget();\r\n\r\n  // Метод для подписки на события\r\n  public on(event: string, callback: Function, target?: any) {\r\n    this.eventTarget.on(event, callback, target);\r\n  }\r\n\r\n  // Метод для отписки от событий\r\n  public off(event: string, callback: Function, target?: any) {\r\n    this.eventTarget.off(event, callback, target);\r\n  }\r\n\r\n  onLoad() {\r\n    if (SocketManager._instance && SocketManager._instance !== this) {\r\n      console.warn(\"SocketManager уже существует. Удаление дубликата.\");\r\n      this.node.destroy();\r\n      return;\r\n    }\r\n    SocketManager._instance = this;\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      !this.coinsLabel ||\r\n      !this.energyProgressBar ||\r\n      !this.energyValueLabel ||\r\n      !this.messagesLabel ||\r\n      !this.boostsLabel\r\n    ) {\r\n      console.error(\"Не все необходимые компоненты назначены в SocketManager.\");\r\n      return;\r\n    }\r\n\r\n    if (!this.incomeManager) {\r\n      const incomeManagerNode =\r\n        this.node.scene.getChildByName(\"IncomeManagerNode\");\r\n      if (incomeManagerNode) {\r\n        this.incomeManager = incomeManagerNode.getComponent(IncomeManager);\r\n      } else {\r\n        console.warn(\"IncomeManager не найден в сцене.\");\r\n      }\r\n    }\r\n\r\n    this.initializeUser();\r\n\r\n    this.showUserInfo(false);\r\n  }\r\n\r\n  onDestroy() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n    if (SocketManager._instance === this) {\r\n      SocketManager._instance = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Динамически загружает Telegram Web Apps SDK\r\n   */\r\n  private loadTelegramSDK(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      if ((window as any).Telegram) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n      script.onload = () => {\r\n        resolve();\r\n      };\r\n      script.onerror = () => {\r\n        reject(new Error(\"Не удалось загрузить Telegram Web Apps SDK.\"));\r\n      };\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Инициализирует пользователя, получая данные из Telegram WebApp API или используя моковые данные\r\n   */\r\n  async initializeUser() {\r\n    try {\r\n      await this.loadTelegramSDK();\r\n\r\n      const tg = (window as any).Telegram?.WebApp;\r\n\r\n      if (tg) {\r\n        console.log(\"Telegram WebApp API доступен\");\r\n        console.log(tg.initDataUnsafe);\r\n\r\n        // Ждём, пока Telegram WebApp будет готов\r\n        await new Promise<void>((resolve) => {\r\n          tg.ready();\r\n          resolve();\r\n        });\r\n\r\n        console.log(\"tg.initDataUnsafe после готовности:\", tg.initDataUnsafe);\r\n\r\n        // Применяем настройки Telegram WebApp\r\n        tg.expand?.();\r\n        tg.disableVerticalSwipes?.();\r\n        tg.isVerticalSwipesEnabled = false;\r\n        tg.setBackgroundColor?.(\"#272727\");\r\n\r\n        if (tg?.web_app_setup_swipe_behavior) {\r\n          tg.web_app_setup_swipe_behavior({\r\n            allow_vertical_swipe: false,\r\n          });\r\n        }\r\n\r\n        if (tg.initDataUnsafe?.user?.id) {\r\n          const userData = {\r\n            id: tg.initDataUnsafe.user.id,\r\n            username: tg.initDataUnsafe.user.username,\r\n            first_name: tg.initDataUnsafe.user.first_name,\r\n            last_name: tg.initDataUnsafe.user.last_name || \"\",\r\n            language_code: tg.initDataUnsafe.user.language_code || \"\",\r\n            is_premium: tg.initDataUnsafe.user.is_premium || false,\r\n            photo_url: tg.initDataUnsafe.user.photo_url || \"\",\r\n            full_name: `${tg.initDataUnsafe.user.first_name} ${\r\n              tg.initDataUnsafe.user.last_name || \"\"\r\n            }`,\r\n          };\r\n\r\n          console.log(\"Данные пользователя Telegram:\", userData);\r\n\r\n          this.userId = userData.id;\r\n          this.userData = userData;\r\n        } else {\r\n          console.warn(\"Данные пользователя не найдены в tg.initDataUnsafe.\");\r\n          this.useMockData();\r\n        }\r\n      } else {\r\n        console.warn(\"Telegram WebApp недоступен. Используем моковые данные.\");\r\n        this.useMockData();\r\n      }\r\n\r\n      // Продолжаем инициализацию\r\n      await this.createOrUpdateUser(this.userData);\r\n      await this.fetchInitialData();\r\n      this.autoConnect();\r\n      this.showUserInfo(true);\r\n      await this.checkPassiveIncome(); // Добавлено для немедленной проверки пассивного дохода\r\n\r\n      // Обработка реферальных параметров\r\n      if (tg && tg.initDataUnsafe?.start_param) {\r\n        const startParam = tg.initDataUnsafe.start_param;\r\n        console.log(\"start_param:\", startParam);\r\n\r\n        if (startParam.startsWith(\"refId\")) {\r\n          const referrerId = startParam.replace(\"refId\", \"\");\r\n          const referralId = this.userId;\r\n\r\n          if (\r\n            referralId &&\r\n            referrerId &&\r\n            referralId.toString() !== referrerId\r\n          ) {\r\n            try {\r\n              const response = await fetch(\r\n                `https://dev.simatap.ru/api/referrals?referrer_id=${referrerId}&referral_id=${referralId}`,\r\n                {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({}),\r\n                }\r\n              );\r\n\r\n              if (response.ok) {\r\n                console.log(\"Реферал успешно зарегистрирован.\");\r\n              } else {\r\n                const data = await response.json();\r\n                if (data.message === \"Такая запись о реферале уже существует\") {\r\n                  console.log(\"Реферал уже существует.\");\r\n                } else {\r\n                  console.error(\r\n                    \"Ошибка при регистрации реферала:\",\r\n                    data.message\r\n                  );\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.error(\"Ошибка при регистрации реферала:\", error);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Эмитируем событие завершения инициализации пользователя\r\n      this.eventTarget.emit(\"userInitialized\");\r\n    } catch (error) {\r\n      console.error(\"Ошибка при инициализации пользователя:\", error);\r\n    }\r\n  }\r\n\r\n  private useMockData() {\r\n    const userData = {\r\n      id: 422840434,\r\n      username: \"ceo bro's\",\r\n      first_name: \"madesta\",\r\n      last_name: \"\",\r\n      language_code: \"en\",\r\n      is_premium: false,\r\n      photo_url: \"\",\r\n      full_name: \"Test User\",\r\n    };\r\n    this.userId = userData.id;\r\n    this.userData = userData;\r\n    console.log(`Mock user data set. User ID: ${this.userId}`);\r\n    // Эмитируем событие при использовании моковых данных\r\n    this.eventTarget.emit(\"userInitialized\");\r\n  }\r\n\r\n  /**\r\n   * Создает или обновляет пользователя на сервере\r\n   * @param userData Данные пользователя\r\n   */\r\n  async createOrUpdateUser(userData: any) {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        id: userData.id.toString(),\r\n        username: userData.username || \"\",\r\n        first_name: userData.first_name || \"\",\r\n        last_name: userData.last_name || \"\",\r\n      });\r\n\r\n      const postResponse = await fetch(\r\n        `https://dev.simatap.ru/api/users?${queryParams.toString()}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({}),\r\n        }\r\n      );\r\n\r\n      if (!postResponse.ok) {\r\n        throw new Error(\r\n          `Ошибка при отправке POST запроса: ${postResponse.statusText}`\r\n        );\r\n      }\r\n\r\n      console.log(\"Пользователь успешно создан или обновлен.\");\r\n    } catch (error) {\r\n      console.warn(\"Ошибка при создании или обновлении пользователя.\", error);\r\n    }\r\n  }\r\n\r\n  autoConnect() {\r\n    try {\r\n      this.socket = io(\"https://dev.simatap.ru\", {\r\n        transports: [\"websocket\"],\r\n        secure: true,\r\n        rejectUnauthorized: false,\r\n      });\r\n\r\n      this.socket.on(\"connect\", () => {\r\n        this.socket.emit(\"register\", { userId: this.userId });\r\n        this.showUserInfo(true);\r\n      });\r\n\r\n      this.socket.on(\"disconnect\", () => {\r\n        this.showMessage(\"Отключено от сервера.\", \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"energyUpdated\", (data: any) => {\r\n        if (data.energy_left !== undefined) {\r\n          this.updateEnergy(Math.round(data.energy_left));\r\n        } else {\r\n          console.warn(\r\n            \"energyUpdated event received, but energy_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик обновления количества бустов\r\n      this.socket.on(\"boostsUpdated\", (data: any) => {\r\n        console.log(\"Received boostsUpdated event:\", data);\r\n        if (data.boosts_left !== undefined) {\r\n          this.updateBoosts(data.boosts_left);\r\n        } else {\r\n          console.warn(\r\n            \"boostsUpdated event received, but boosts_left is undefined.\"\r\n          );\r\n        }\r\n      });\r\n\r\n      // Обработчик события обновления монет\r\n      this.socket.on(\"coinsUpdated\", (data: any) => {\r\n        if (data.coins !== undefined) {\r\n          this.updateCoins(Math.round(data.coins));\r\n        } else {\r\n          console.warn(\"coinsUpdated event received, but coins is undefined.\");\r\n        }\r\n      });\r\n\r\n      this.socket.on(\"tapError\", (data: any) => {\r\n        this.showMessage(data.message, \"warning\");\r\n      });\r\n\r\n      this.socket.on(\"registrationError\", (data: any) => {\r\n        this.showMessage(data.message, \"danger\");\r\n        this.showUserInfo(false);\r\n      });\r\n\r\n      this.socket.on(\"connect_error\", (error: any) => {\r\n        this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      });\r\n\r\n      // Обработчик ответа на активацию буста\r\n      this.socket.on(\"boostActivated\", (data: any) => {\r\n        console.log(\"Boost activation response:\", data);\r\n        if (data.newEnergyValue !== undefined) {\r\n          this.updateEnergy(Math.round(data.newEnergyValue));\r\n        }\r\n      });\r\n\r\n      // Обработчик ошибки при активации буста\r\n      this.socket.on(\"boostError\", (data: any) => {\r\n        console.error(\"Ошибка активации буста:\", data.message);\r\n      });\r\n    } catch (error) {\r\n      this.showMessage(\"Ошибка подключения к серверу.\", \"danger\");\r\n      console.error(\"Socket connection error:\", error);\r\n    }\r\n  }\r\n\r\n  async fetchInitialData() {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/users/${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"API response:\", data);\r\n\r\n      if (data.energy_left !== undefined) {\r\n        this.updateEnergy(Math.round(data.energy_left));\r\n        console.log(`Initial energy fetched: ${Math.round(data.energy_left)}`);\r\n      } else {\r\n        console.warn(\"Energy data not found in API response.\");\r\n      }\r\n\r\n      if (data.boosts_left !== undefined) {\r\n        this.updateBoosts(data.boosts_left);\r\n        console.log(`Initial boosts fetched: ${data.boosts_left}`);\r\n      } else {\r\n        console.warn(\"Boosts data not found in API response.\");\r\n      }\r\n\r\n      await this.fetchTotalCoins();\r\n    } catch (error) {\r\n      console.error(\"Error fetching initial data:\", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает общее количество монет пользователя\r\n   */\r\n  async fetchTotalCoins() {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/totalCoins/${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (data.coins !== undefined) {\r\n        this.updateCoins(Math.round(data.coins));\r\n        console.log(`Total coins fetched: ${Math.round(data.coins)}`);\r\n      } else {\r\n        console.warn(\"Coins data not found in API response.\");\r\n      }\r\n    } catch (error) {\r\n      console.warn(\r\n        \"Ошибка при получении количества монет. Используем значение по умолчанию 0.\",\r\n        error\r\n      );\r\n      this.updateCoins(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество монет и соответствующую метку.\r\n   * @param coins Новое количество монет.\r\n   */\r\n  updateCoins(coins: number) {\r\n    this.currentCoins = coins;\r\n    if (this.coinsLabel) {\r\n      this.coinsLabel.string = this.currentCoins.toLocaleString();\r\n    } else {\r\n      console.warn(\"coinsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверяет и обрабатывает пассивный доход\r\n   */\r\n  async checkPassiveIncome() {\r\n    const income = await this.fetchPassiveIncome();\r\n    if (income > 0) {\r\n      if (this.passiveIncomeModal) {\r\n        this.passiveIncomeModal.show(income);\r\n      } else {\r\n        console.warn(\"PassiveIncomeModal не назначен в SocketManager.\");\r\n      }\r\n\r\n      this.currentCoins += income;\r\n      this.updateCoins(this.currentCoins);\r\n    } else {\r\n      // Если вы хотите открывать окно даже при нулевом доходе, раскомментируйте ниже\r\n      // if (this.passiveIncomeModal) {\r\n      //   this.passiveIncomeModal.show(0); // Или другой параметр по вашему усмотрению\r\n      // }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает пассивный доход с сервера и возвращает его\r\n   */\r\n  async fetchPassiveIncome(): Promise<number> {\r\n    try {\r\n      const response = await fetch(\r\n        `https://dev.simatap.ru/api/passiveIncome?userId=${this.userId}`\r\n      );\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(\r\n          `HTTP error! status: ${response.status}, response: ${errorText}`\r\n        );\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(\"Passive income API response:\", data);\r\n\r\n      if (\"passive_income_earned\" in data) {\r\n        const income = Math.round(data.passive_income_earned);\r\n        console.log(`Пассивный доход получен: ${income}`);\r\n        return income;\r\n      } else if (\"message\" in data) {\r\n        console.log(`Сообщение от сервера: ${data.message}`);\r\n        return 0;\r\n      } else {\r\n        console.warn(\"Неизвестный формат ответа от сервера:\", data);\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении пассивного дохода:\", error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет количество бустов и соответствующую метку.\r\n   * @param boostsLeft Текущее количество оставшихся бустов.\r\n   */\r\n  updateBoosts(boostsLeft: number) {\r\n    this.currentBoosts = boostsLeft;\r\n    if (this.boostsLabel) {\r\n      this.boostsLabel.string = `${this.currentBoosts}/${this.maxBoosts}`;\r\n    } else {\r\n      console.warn(\"boostsLabel не назначен в SocketManager.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет прогресс-бар энергии и текстовую метку.\r\n   * @param currentEnergy Текущее значение энергии.\r\n   */\r\n  updateEnergy(currentEnergy: number) {\r\n    currentEnergy = Math.round(\r\n      Math.max(0, Math.min(this.maxEnergy, currentEnergy))\r\n    );\r\n    this.currentEnergy = currentEnergy;\r\n\r\n    const progress = currentEnergy / this.maxEnergy;\r\n    this.energyProgressBar.progress = progress;\r\n\r\n    this.energyValueLabel.string = `${currentEnergy}/${this.maxEnergy}`;\r\n  }\r\n\r\n  /**\r\n   * Показывает или скрывает UserInfo\r\n   * @param show Показывать или скрывать\r\n   */\r\n  showUserInfo(show: boolean) {\r\n    if (\r\n      this.coinsLabel &&\r\n      this.energyProgressBar &&\r\n      this.energyValueLabel &&\r\n      this.boostsLabel\r\n    ) {\r\n      this.coinsLabel.node.active = show;\r\n      this.energyProgressBar.node.active = show;\r\n      this.energyValueLabel.node.active = show;\r\n      this.boostsLabel.node.active = show;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отображает сообщение пользователю\r\n   * @param message Текст сообщения\r\n   * @param type Тип сообщения ('success', 'danger', 'warning', 'info')\r\n   */\r\n  showMessage(message: string, type: string = \"info\") {\r\n    if (this.messagesLabel) {\r\n      this.messagesLabel.string = message;\r\n      switch (type) {\r\n        case \"success\":\r\n          this.messagesLabel.node.color = new Color(0, 255, 0);\r\n          break;\r\n        case \"danger\":\r\n          this.messagesLabel.node.color = new Color(255, 0, 0);\r\n          break;\r\n        case \"warning\":\r\n          this.messagesLabel.node.color = new Color(255, 165, 0);\r\n          break;\r\n        default:\r\n          this.messagesLabel.node.color = new Color(255, 255, 255);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее значение энергии\r\n   */\r\n  getCurrentEnergy(): number {\r\n    return this.currentEnergy;\r\n  }\r\n\r\n  /**\r\n   * Возвращает текущее количество бустов\r\n   */\r\n  getCurrentBoosts(): number {\r\n    return this.currentBoosts;\r\n  }\r\n\r\n  /**\r\n   * Активирует буст\r\n   */\r\n  activateBoost() {\r\n    if (!this.socket || !this.socket.connected || !this.userId) {\r\n      console.error(\r\n        \"Не удалось использовать буст: сокет не подключен или userId не установлен.\"\r\n      );\r\n      return;\r\n    }\r\n    this.socket.emit(\"useBoost\", { userId: this.userId });\r\n    console.log(\"Буст активирован.\");\r\n  }\r\n\r\n  /**\r\n   * Обработчик события \"tap\"\r\n   */\r\n  async onTap() {\r\n    if (!this.userId) {\r\n      this.showMessage(\"Пользователь не подключен.\", \"danger\");\r\n      return;\r\n    }\r\n    if (this.currentEnergy < 13) {\r\n      this.showMessage(\"Не хватает энергии для тапа.\", \"warning\");\r\n      return;\r\n    }\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"tap\", { userId: this.userId });\r\n      this.showMessage(\"Тап отправлен!\", \"info\");\r\n\r\n      // Добавляем вибрацию при клике\r\n      this.triggerHapticFeedback();\r\n    } else {\r\n      this.showMessage(\"Соединение с сервером отсутствует.\", \"danger\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает текущий userId\r\n   */\r\n  public getUserId(): number {\r\n    return this.userId;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает новый userId\r\n   * @param id Новый ID пользователя\r\n   */\r\n  public setUserId(id: number) {\r\n    this.userId = id;\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(\"register\", { userId: this.userId });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициирует вибрацию через Telegram WebApp\r\n   */\r\n  private triggerHapticFeedback() {\r\n    const tg = (window as any).Telegram?.WebApp;\r\n    if (tg && tg.HapticFeedback) {\r\n      tg.HapticFeedback.impactOccurred(\"medium\");\r\n    } else {\r\n      console.warn(\"HapticFeedback API недоступен.\");\r\n    }\r\n  }\r\n}\r\n"]}