{"version":3,"sources":["file:///C:/GitHub/cocos-misapat/assets/scripts/IncomeManager.ts"],"names":["_decorator","Component","Label","SocketManager","ccclass","property","IncomeManager","apiUrl","start","incomeLabel","console","error","instance","updateIncomeLabel","fetchIncomeData","userId","getUserId","response","fetch","ok","Error","status","data","json","totalIncome","calculateTotalIncome","formattedIncome","formatIncome","log","upgrades","reduce","sum","upgrade","cumulative_income","income","toFixed","text","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;AACvBC,MAAAA,a,iBAAAA,a;;;;;qFAHT;;;;;AAGiD;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;+BAejBM,a,WADZF,OAAO,CAAC,eAAD,C,UAELC,QAAQ,CAACH,KAAD,C,2BAFX,MACaI,aADb,SACmCL,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAEhB;AAFgB,eAInCM,MAJmC,GAIlB,qCAJkB;AAAA;;AAM3CC,QAAAA,KAAK,GAAG;AACN,cAAI,CAAC,KAAKC,WAAV,EAAuB;AACrBC,YAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd;AACA;AACD,WAJK,CAMN;;;AACA,cAAI,CAAC;AAAA;AAAA,8CAAcC,QAAnB,EAA6B;AAC3BF,YAAAA,OAAO,CAACC,KAAR,CAAc,mCAAd;AACA,iBAAKE,iBAAL,CAAuB,iBAAvB;AACA;AACD;;AAED,eAAKC,eAAL;AACD;AAED;AACF;AACA;;;AACuB,cAAfA,eAAe,GAAG;AACtB,gBAAMC,MAAM,GAAG;AAAA;AAAA,8CAAcH,QAAd,CAAuBI,SAAvB,EAAf;;AACA,cAAI,CAACD,MAAL,EAAa;AACXL,YAAAA,OAAO,CAACC,KAAR,CAAc,uCAAd;AACA,iBAAKE,iBAAL,CAAuB,iBAAvB;AACA;AACD;;AAED,cAAI;AACF,kBAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKX,MAAO,WAAUQ,MAAO,EAAjC,CAA5B;;AACA,gBAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB;AAChB,oBAAM,IAAIC,KAAJ,CAAW,uBAAsBH,QAAQ,CAACI,MAAO,EAAjD,CAAN;AACD;;AAED,kBAAMC,IAAe,GAAG,MAAML,QAAQ,CAACM,IAAT,EAA9B;AACA,kBAAMC,WAAW,GAAG,KAAKC,oBAAL,CAA0BH,IAA1B,CAApB;AACA,kBAAMI,eAAe,GAAG,KAAKC,YAAL,CAAkBH,WAAlB,CAAxB;AAEA,iBAAKX,iBAAL,CAAuBa,eAAvB;AACAhB,YAAAA,OAAO,CAACkB,GAAR,CAAa,gBAAeF,eAAgB,EAA5C;AACD,WAZD,CAYE,OAAOf,KAAP,EAAc;AACdD,YAAAA,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDA,KAApD;AACA,iBAAKE,iBAAL,CAAuB,iBAAvB,EAFc,CAE6B;AAC5C;AACF;AAED;AACF;AACA;AACA;AACA;;;AACEY,QAAAA,oBAAoB,CAACI,QAAD,EAA8B;AAChD,iBAAOA,QAAQ,CAACC,MAAT,CACL,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,IAAIC,OAAO,CAACC,iBAAR,IAA6B,CAAjC,CADhB,EAEL,CAFK,CAAP;AAID;AAED;AACF;AACA;AACA;AACA;;;AACEN,QAAAA,YAAY,CAACO,MAAD,EAAyB;AACnC,cAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAQ,KAAI,CAACA,MAAM,GAAG,IAAV,EAAgBC,OAAhB,CAAwB,CAAxB,CAA2B,eAAvC;AACD;;AACD,iBAAQ,KAAID,MAAO,cAAnB;AACD;AAED;AACF;AACA;AACA;;;AACErB,QAAAA,iBAAiB,CAACuB,IAAD,EAAe;AAC9B,eAAK3B,WAAL,CAAiB4B,MAAjB,GAA0BD,IAA1B;AACD;;AAjF0C,O;;;;;iBAEtB,I","sourcesContent":["// assets/scripts/Income/IncomeManager.ts\r\n\r\nimport { _decorator, Component, Label } from \"cc\";\r\nimport { SocketManager } from \"./SocketManager\"; // Импортируйте SocketManager\r\nconst { ccclass, property } = _decorator;\r\n\r\ninterface Upgrade {\r\n  upgrade_id: number;\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  current_level: number;\r\n  next_level: number | null;\r\n  next_level_cost: number | null;\r\n  income_increase_per_level: number;\r\n  cumulative_income: number;\r\n}\r\n\r\n@ccclass(\"IncomeManager\")\r\nexport class IncomeManager extends Component {\r\n  @property(Label)\r\n  incomeLabel: Label = null; // Метка для отображения суммы дохода\r\n\r\n  private apiUrl: string = \"https://dev.simatap.ru/api/upgrades\";\r\n\r\n  start() {\r\n    if (!this.incomeLabel) {\r\n      console.error(\"incomeLabel не назначен в IncomeManager.\");\r\n      return;\r\n    }\r\n\r\n    // Убедитесь, что SocketManager инициализирован\r\n    if (!SocketManager.instance) {\r\n      console.error(\"SocketManager не инициализирован.\");\r\n      this.updateIncomeLabel(\"+ 0 доход в час\");\r\n      return;\r\n    }\r\n\r\n    this.fetchIncomeData();\r\n  }\r\n\r\n  /**\r\n   * Получает данные с API и обновляет метку дохода\r\n   */\r\n  async fetchIncomeData() {\r\n    const userId = SocketManager.instance.getUserId();\r\n    if (!userId) {\r\n      console.error(\"userId не установлен в SocketManager.\");\r\n      this.updateIncomeLabel(\"+ 0 доход в час\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${this.apiUrl}?userId=${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data: Upgrade[] = await response.json();\r\n      const totalIncome = this.calculateTotalIncome(data);\r\n      const formattedIncome = this.formatIncome(totalIncome);\r\n\r\n      this.updateIncomeLabel(formattedIncome);\r\n      console.log(`Общий доход: ${formattedIncome}`);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении данных с API:\", error);\r\n      this.updateIncomeLabel(\"+ 0 доход в час\"); // Устанавливаем 0 доход в случае ошибки\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Складывает cumulative_income всех объектов\r\n   * @param upgrades Массив объектов Upgrade\r\n   * @returns Общая сумма дохода\r\n   */\r\n  calculateTotalIncome(upgrades: Upgrade[]): number {\r\n    return upgrades.reduce(\r\n      (sum, upgrade) => sum + (upgrade.cumulative_income || 0),\r\n      0\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Форматирует сумму до тысяч с добавлением 'K' и префикса '+', суффикса 'доход в час'\r\n   * @param income Сумма дохода\r\n   * @returns Форматированная строка\r\n   */\r\n  formatIncome(income: number): string {\r\n    if (income >= 1000) {\r\n      return `+ ${(income / 1000).toFixed(0)}K доход в час`;\r\n    }\r\n    return `+ ${income} доход в час`;\r\n  }\r\n\r\n  /**\r\n   * Обновляет текст метки дохода\r\n   * @param text Текст для отображения\r\n   */\r\n  updateIncomeLabel(text: string) {\r\n    this.incomeLabel.string = text;\r\n  }\r\n}\r\n"]}