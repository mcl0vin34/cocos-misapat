{"version":3,"sources":["file:///C:/Users/User/Desktop/simatap_frontend/assets/scripts/ReferralLinkManager.ts"],"names":["_decorator","Component","Node","Label","Vec3","Color","tween","ccclass","property","ReferralLinkManager","referralLink","userId","initialPosition","start","generateLinkNode","console","error","copyLinkNode","referralLinkLabel","copyNotificationLabel","on","EventType","TOUCH_END","onGenerateLinkClicked","onCopyLinkClicked","active","node","position","clone","getReferralLink","string","log","color","setPosition","to","animationDuration","by","moveUpDistance","call","warn","navigator","clipboard","writeText","err"],"mappings":"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","sourcesContent":["// assets/scripts/Referral/ReferralLinkManager.ts\r\n\r\nimport { _decorator, Component, Node, Label, Vec3, Color, tween } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ReferralLinkManager')\r\nexport class ReferralLinkManager extends Component {\r\n    @property(Node)\r\n    generateLinkNode: Node = null; // Нода для создания ссылки\r\n\r\n    @property(Node)\r\n    copyLinkNode: Node = null; // Нода для копирования ссылки\r\n\r\n    @property(Label)\r\n    referralLinkLabel: Label = null; // Метка для отображения ссылки\r\n\r\n    @property(Label)\r\n    copyNotificationLabel: Label = null; // Метка для уведомления о копировании\r\n\r\n    private referralLink: string = '';\r\n    private userId: number = 777270195; // Фиксированный user_id\r\n\r\n    // Параметры анимации\r\n    @property\r\n    animationDuration: number = 1.5; // Продолжительность анимации в секундах\r\n\r\n    @property\r\n    moveUpDistance: number = 300; // Расстояние, на которое уведомление будет подниматься\r\n\r\n    private initialPosition: Vec3 = new Vec3();\r\n\r\n    start() {\r\n        // Проверка наличия всех нод\r\n        if (!this.generateLinkNode) {\r\n            console.error('generateLinkNode не назначен в ReferralLinkManager.');\r\n        }\r\n        if (!this.copyLinkNode) {\r\n            console.error('copyLinkNode не назначен в ReferralLinkManager.');\r\n        }\r\n        if (!this.referralLinkLabel) {\r\n            console.error('referralLinkLabel не назначен в ReferralLinkManager.');\r\n        }\r\n        if (!this.copyNotificationLabel) {\r\n            console.error('copyNotificationLabel не назначен в ReferralLinkManager.');\r\n        }\r\n\r\n        // Назначаем обработчик нажатия на ноду \"Создать ссылку\"\r\n        if (this.generateLinkNode) {\r\n            this.generateLinkNode.on(Node.EventType.TOUCH_END, this.onGenerateLinkClicked, this);\r\n        }\r\n\r\n        // Назначаем обработчик нажатия на ноду \"Копировать ссылку\" и скрываем её по умолчанию\r\n        if (this.copyLinkNode) {\r\n            this.copyLinkNode.on(Node.EventType.TOUCH_END, this.onCopyLinkClicked, this);\r\n            this.copyLinkNode.active = false; // Скрыть кнопку копирования до создания ссылки\r\n        }\r\n\r\n        // Инициализируем уведомление как скрытое и сохраняем начальную позицию\r\n        if (this.copyNotificationLabel) {\r\n            this.copyNotificationLabel.node.active = false; // Скрыть уведомление по умолчанию\r\n            this.initialPosition = this.copyNotificationLabel.node.position.clone();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обработчик нажатия на ноду \"Создать ссылку\"\r\n     */\r\n    onGenerateLinkClicked() {\r\n        this.referralLink = this.getReferralLink(this.userId);\r\n        this.referralLinkLabel.string = this.referralLink;\r\n        console.log(`Реферальная ссылка создана: ${this.referralLink}`);\r\n\r\n        if (this.copyLinkNode) {\r\n            this.copyLinkNode.active = true; // Показать кнопку копирования после создания ссылки\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Генерирует реферальную ссылку на основе user_id\r\n     * @param userId ID пользователя\r\n     * @returns Реферальная ссылка\r\n     */\r\n    getReferralLink(userId: number): string {\r\n        return `https://t.me/misapatStage_bot?startapp=refId${userId}`;\r\n    }\r\n\r\n    /**\r\n     * Обработчик нажатия на ноду \"Копировать ссылку\"\r\n     */\r\n    async onCopyLinkClicked() {\r\n        // Запускаем анимацию уведомления сразу при нажатии на кнопку\r\n        if (this.copyNotificationLabel) {\r\n            this.copyNotificationLabel.node.active = true;\r\n\r\n            // Убедимся, что цвет и позиция инициализированы правильно\r\n            this.copyNotificationLabel.color = new Color(255, 255, 255, 255);\r\n            this.copyNotificationLabel.node.setPosition(this.initialPosition.clone());\r\n\r\n            // Анимация для цвета: плавное исчезновение\r\n            tween(this.copyNotificationLabel)\r\n                .to(this.animationDuration, { color: new Color(255, 255, 255, 0) })\r\n                .start();\r\n\r\n            // Анимация для позиции: подъем вверх\r\n            tween(this.copyNotificationLabel.node)\r\n                .by(this.animationDuration, { position: new Vec3(0, this.moveUpDistance, 0) })\r\n                .call(() => {\r\n                    this.copyNotificationLabel.node.active = false; // Скрыть уведомление после анимации\r\n                    // Восстановить первоначальный цвет и позицию для будущих уведомлений\r\n                    this.copyNotificationLabel.color = new Color(255, 255, 255, 255);\r\n                    this.copyNotificationLabel.node.setPosition(this.initialPosition.clone());\r\n                })\r\n                .start();\r\n        }\r\n\r\n        // Выполняем копирование ссылки\r\n        if (!this.referralLink) {\r\n            console.warn('Реферальная ссылка не создана.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await navigator.clipboard.writeText(this.referralLink);\r\n            console.log('Реферальная ссылка скопирована в буфер обмена.');\r\n        } catch (err) {\r\n            console.error('Не удалось скопировать ссылку: ', err);\r\n            // Можно добавить уведомление об ошибке, если необходимо\r\n        }\r\n    }\r\n}\r\n"]}